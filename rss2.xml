<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hong3의 개발블로그</title>
    <link>http://hongdonghyun.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>개발을 잘하고 싶읍니다</description>
    <pubDate>Thu, 21 Nov 2019 07:21:03 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[Swift]수포자</title>
      <link>http://hongdonghyun.github.io/2019/11/[Swift]%E1%84%89%E1%85%AE%E1%84%91%E1%85%A9%E1%84%8C%E1%85%A1/</link>
      <guid>http://hongdonghyun.github.io/2019/11/[Swift]%E1%84%89%E1%85%AE%E1%84%91%E1%85%A9%E1%84%8C%E1%85%A1/</guid>
      <pubDate>Thu, 21 Nov 2019 07:17:44 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42840#&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;링크&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;code&quot;&gt;&lt;a class=&quot;mar
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><a href="https://programmers.co.kr/learn/courses/30/lessons/42840#" target="_blank" rel="noopener">링크</a></p><h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> answers:[Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">let</span> man1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">    <span class="keyword">let</span> man2 = [<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>]</span><br><span class="line">    <span class="keyword">let</span> man3 = [<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>]</span><br><span class="line">    <span class="keyword">var</span> scores: [<span class="type">Int</span>:<span class="type">Int</span>] = [<span class="number">1</span>:<span class="number">0</span>,<span class="number">2</span>:<span class="number">0</span>,<span class="number">3</span>:<span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;answers.<span class="built_in">count</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> man1[i % <span class="number">5</span>] == answers[i] &#123;</span><br><span class="line">            scores[<span class="number">1</span>] = (scores[<span class="number">1</span>] ?? <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> man2[i % <span class="number">8</span>] == answers[i] &#123;</span><br><span class="line">            scores[<span class="number">2</span>] = (scores[<span class="number">2</span>] ?? <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> man3[i % <span class="number">10</span>] == answers[i] &#123;</span><br><span class="line">            scores[<span class="number">3</span>] = (scores[<span class="number">3</span>] ?? <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> <span class="built_in">max</span> = scores.values.<span class="built_in">max</span>()</span><br><span class="line">    <span class="keyword">var</span> returnArray: [<span class="type">Int</span>] = scores.values</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> maxVal = <span class="built_in">max</span>, maxVal != <span class="number">0</span> <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> scores.keys.sorted()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> scores &#123;</span><br><span class="line">        <span class="keyword">if</span> maxVal == i.value &#123;</span><br><span class="line">            returnArray.append(i.key)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> returnArray.sorted()</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/[Swift]%E1%84%89%E1%85%AE%E1%84%91%E1%85%A9%E1%84%8C%E1%85%A1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]Insertion Sort</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-Insertion-Sort/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-Insertion-Sort/</guid>
      <pubDate>Wed, 20 Nov 2019 06:49:35 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;swift로-풀어보기&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#swift로-풀어보기&quot;&gt;&lt;/a&gt; Swift로 풀어보기&lt;/h1&gt;
&lt;h2 id=&quot;insertion-sort&quot;&gt;&lt;a class=&quot;markdownIt-Anc
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="swift로-풀어보기"><a class="markdownIt-Anchor" href="#swift로-풀어보기"></a> Swift로 풀어보기</h1><h2 id="insertion-sort"><a class="markdownIt-Anchor" href="#insertion-sort"></a> Insertion Sort</h2><div class="video-container"><iframe src="//www.youtube.com/embed/OGzPmgsI-pQ" frameborder="0" allowfullscreen></iframe></div><p>시간복잡도: O(n^2)</p><p>n 개의 원소를 가진 배열을 정렬할 때, i 번째를 정렬할 순서라고 가정하면,</p><p>0 부터 i-1 까지의 원소들은 정렬되어있다는 가정하에,</p><p>i 번째 원소와 i-1 번째 원소부터 0 번째 원소까지 비교하면서 i 번째 원소가 비교하는 원소보다 클 경우 서로의 위치를 바꾸고,</p><p>작을 경우 위치를 바꾸지 않고 다음 순서의 원소와 비교하면서 정렬해준다.</p><p>이 과정을 정렬하려는 배열의 마지막 원소까지 반복해준다.</p><h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertionSort</span><span class="params">()</span></span> -&gt; <span class="type">Array</span>&lt;<span class="type">Int</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> randomArray = sequence.shuffled()</span><br><span class="line">    <span class="keyword">var</span> pivot: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> pivotValue: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>...randomArray.<span class="built_in">count</span>-<span class="number">1</span> &#123;</span><br><span class="line">        pivot = i</span><br><span class="line">        pivotValue = randomArray[i]</span><br><span class="line">        <span class="keyword">while</span> pivot &gt; <span class="number">0</span> &amp;&amp; randomArray[pivot-<span class="number">1</span>] &gt; pivotValue &#123;</span><br><span class="line">            randomArray.swapAt(pivot, pivot-<span class="number">1</span>)</span><br><span class="line">            pivot -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> randomArray</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="개인정리"><a class="markdownIt-Anchor" href="#개인정리"></a> 개인정리</h2><p>개인적으로 버블소트와 셀렉션소트의 차이를 느꼈다면</p><p>Bubble,Selection은<br />순회와 정렬이 -&gt;(오른쪽)으로 같이 진행된다고 느낀반면,</p><p>Insertion은<br />순회는 -&gt;(오른쪽)<br />정렬은 &lt;-(왼쪽) 방향으로 진행된다고 느낀점이다.</p><blockquote><p>물론 시간복잡도는 O(n^2)임</p></blockquote><p>개인적으로 삽입정렬은 재밌었다. 신기했음<br />이런식으로도 생각할 수 있구나 라는걸 느낌</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-Insertion-Sort/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]Selection Sort</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-Selection-Sort/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-Selection-Sort/</guid>
      <pubDate>Wed, 20 Nov 2019 06:45:17 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;swift로-풀어보기&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#swift로-풀어보기&quot;&gt;&lt;/a&gt; Swift로 풀어보기&lt;/h1&gt;
&lt;h2 id=&quot;selection-sort&quot;&gt;&lt;a class=&quot;markdownIt-Anc
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="swift로-풀어보기"><a class="markdownIt-Anchor" href="#swift로-풀어보기"></a> Swift로 풀어보기</h1><h2 id="selection-sort"><a class="markdownIt-Anchor" href="#selection-sort"></a> Selection Sort</h2><div class="video-container"><iframe src="//www.youtube.com/embed/xWBP4lzkoyM" frameborder="0" allowfullscreen></iframe></div><p>시간복잡도: O(n^2)</p><p>n 개의 원소를 가진 배열을 정렬할 때, 계속해서 바꾸는 것이 아니라 비교하고 있는 값의 index 를 저장해둔다.<br />그리고 최종적으로 한 번만 바꿔준다.</p><h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sequence = <span class="number">1</span> ..&lt; <span class="number">100</span>+<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">selectionSort</span><span class="params">()</span></span> -&gt; <span class="type">Array</span>&lt;<span class="type">Int</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> randomArray = sequence.shuffled()</span><br><span class="line">    <span class="keyword">var</span> value: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> location: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;randomArray.<span class="built_in">count</span> &#123;</span><br><span class="line">        value = randomArray[i]</span><br><span class="line">        location = i</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> i+<span class="number">1</span>..&lt;randomArray.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="comment">// 제일 작은값 찾는중</span></span><br><span class="line">            <span class="keyword">if</span> value &gt; randomArray[j] &#123;</span><br><span class="line">                value = randomArray[j]</span><br><span class="line">                location = j</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 완전순회 후 변경</span></span><br><span class="line">        randomArray.swapAt(i, location)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> randomArray</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="개인정리"><a class="markdownIt-Anchor" href="#개인정리"></a> 개인정리</h2><p>for문안에 값과 위치를 저장 할 수있도록 변수를 할당한다.</p><p>그리고 중첩된 for문이 끝나면 값에 대한 조건순회가 끝났으므로 순회를 시작했던 값과 조건순회중 찾은 가장 작은값의 위치를 바꿔준다.</p><p>버블소트는 매번 위치를 수정해 주었다면<br />셀렉션소트는 한번 다 훑고 수정해준다는것이 차이점</p><p>하지만 둘다 시간복잡도는 O(n^2) 이라는점</p><blockquote><p>Bubble은 핵비효율적이었다면<br />Selection은 덜 비효율</p><blockquote><p>아무튼 비효율적임</p></blockquote></blockquote>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-Selection-Sort/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]Bubble Sort</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-Bubble-Sort/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-Bubble-Sort/</guid>
      <pubDate>Wed, 20 Nov 2019 06:35:49 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;swift로-풀어보기&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#swift로-풀어보기&quot;&gt;&lt;/a&gt; Swift로 풀어보기&lt;/h1&gt;
&lt;h2 id=&quot;bubble-sort&quot;&gt;&lt;a class=&quot;markdownIt-Anchor
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="swift로-풀어보기"><a class="markdownIt-Anchor" href="#swift로-풀어보기"></a> Swift로 풀어보기</h1><h2 id="bubble-sort"><a class="markdownIt-Anchor" href="#bubble-sort"></a> Bubble Sort</h2><div class="video-container"><iframe src="//www.youtube.com/embed/nmhjrI-aW5o" frameborder="0" allowfullscreen></iframe></div><p>시간복잡도: O(n^2)</p><p>n 개의 원소를 가진 배열을 정렬할 때, 인접한 두 개의 데이터를 비교해가면서 정렬을 진행하는 방식이다. 가장 큰 값을 배열의 맨 끝에다 이동시키면서 정렬하고자 하는 원소의 개수 만큼을 두 번 반복하게 된다.</p><h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sequence = <span class="number">1</span> ..&lt; <span class="number">100</span>+<span class="number">1</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bubbleSort</span><span class="params">()</span></span> -&gt; <span class="type">Array</span>&lt;<span class="type">Int</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> randomArray = sequence.shuffled()</span><br><span class="line">    <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;randomArray.<span class="built_in">count</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;randomArray.<span class="built_in">count</span>-<span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> randomArray[j] &gt; randomArray[j+<span class="number">1</span>] &#123;</span><br><span class="line">                randomArray.swapAt(j, j+<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> randomArray</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>전체 배열을 순회하면서</p><p>앞쪽값이 뒷쪽값 보다 큰 경우 서로의 위치를 바꾼다.</p><h3 id="성능향상"><a class="markdownIt-Anchor" href="#성능향상"></a> 성능향상</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bubbleSortFlag</span><span class="params">()</span></span> -&gt; <span class="type">Array</span>&lt;<span class="type">Int</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">var</span> randomArray = sequence.shuffled()</span><br><span class="line">    <span class="keyword">var</span> flag: <span class="type">Bool</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;randomArray.<span class="built_in">count</span> &#123;</span><br><span class="line">        flag = <span class="literal">false</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;randomArray.<span class="built_in">count</span>-<span class="number">1</span>-i &#123;</span><br><span class="line">            <span class="keyword">if</span> randomArray[j] &gt; randomArray[j+<span class="number">1</span>] &#123;</span><br><span class="line">                randomArray.swapAt(j, j+<span class="number">1</span>)</span><br><span class="line">                flag = <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> flag == <span class="literal">false</span> &#123;</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> randomArray</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="개인정리"><a class="markdownIt-Anchor" href="#개인정리"></a> 개인정리</h2><p>버블소트의 특징은 한번 순회를 마치면 가장 큰 값이 배열의 가장 뒤쪽으로 가게 된다는점이다.</p><p>전체 배열을 순회하면서</p><p>앞쪽값이 뒷쪽값 보다 큰 경우 서로의 위치를 바꾼다.<br />여기까지는 똑같으나,</p><p>반복문을 계속 진행하다보면 배열의 뒤쪽부분은 큰값의 순서대로 정렬이 될것이고,<br />우리가 원하던 정렬이 이미 이루어진 상태이므로 더이상 비교를 하지 않아도 된다.</p><p><code>for j in 0..&lt;randomArray.count-1-i</code> 이러한 코드가 작성되게 된것도 비슷한 맥락이다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-Bubble-Sort/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift 과제 풀이 7</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-7/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-7/</guid>
      <pubDate>Tue, 19 Nov 2019 09:33:50 GMT</pubDate>
      <description>
      
        
        
          &lt;img src=&quot;/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-7/hexo_one.png&quot; class=&quot;&quot; title=&quot;hexo_one&quot;&gt;
&lt;p&gt;첨부된 이미지를 보고 상속을 이용해 구현해보기&lt;/p&gt;
&lt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<img src="/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-7/hexo_one.png" class="" title="hexo_one"><p>첨부된 이미지를 보고 상속을 이용해 구현해보기</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OAnimal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">var</span> brain: <span class="type">Bool</span> = <span class="literal">true</span></span><br><span class="line">    <span class="keyword">var</span> legs: <span class="type">Int</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> legs: <span class="type">Int</span> = <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.legs = legs</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">OHuman</span>: <span class="title">OAnimal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">init</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(<span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OPet</span>: <span class="title">OAnimal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">fileprivate</span> <span class="keyword">var</span> fleas: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(<span class="number">_</span> fleas: <span class="type">Int</span> = <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.fleas = fleas</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(<span class="number">4</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ODog</span>: <span class="title">OPet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">init</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(<span class="number">8</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OCat</span>: <span class="title">OPet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">init</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(<span class="number">4</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> animal = <span class="type">OAnimal</span>()</span><br><span class="line"><span class="keyword">var</span> human = <span class="type">OHuman</span>()</span><br><span class="line"><span class="keyword">var</span> pet = <span class="type">OPet</span>()</span><br><span class="line"><span class="keyword">var</span> dog = <span class="type">ODog</span>()</span><br><span class="line"><span class="keyword">var</span> cat = <span class="type">OCat</span>()</span><br><span class="line">animal.brain</span><br><span class="line">animal.legs</span><br><span class="line"></span><br><span class="line">human.brain</span><br><span class="line">human.legs</span><br><span class="line"></span><br><span class="line">pet.brain</span><br><span class="line">pet.legs</span><br><span class="line">pet.fleas</span><br><span class="line"></span><br><span class="line">dog.brain</span><br><span class="line">dog.legs</span><br><span class="line">dog.fleas</span><br><span class="line"></span><br><span class="line">cat.brain</span><br><span class="line">cat.legs</span><br><span class="line">cat.fleas</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift 과제 풀이 6</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-6/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-6/</guid>
      <pubDate>Mon, 18 Nov 2019 11:00:06 GMT</pubDate>
      <description>
      
        
        
          &lt;ol&gt;
&lt;li&gt;다음과 같은 속성(Property)과 행위(Method)를 가지는 클래스 만들어보기.&lt;br /&gt;
구현 내용은 자유롭게&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<ol><li>다음과 같은 속성(Property)과 행위(Method)를 가지는 클래스 만들어보기.<br />구현 내용은 자유롭게</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ** 강아지 (Dog)</span></span><br><span class="line"><span class="comment">    - 속성: 이름, 나이, 몸무게, 견종</span></span><br><span class="line"><span class="comment">    - 행위: 짖기, 먹기</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span> =  <span class="string">""</span></span><br><span class="line">    <span class="keyword">var</span> age: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> weight: <span class="type">Double</span> = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">var</span> kind: <span class="type">String</span> = <span class="string">""</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">bark</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"야옹"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">eat</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"쳐묵쳐묵"</span>)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    ** 학생 (Student)</span></span><br><span class="line"><span class="comment">    - 속성: 이름, 나이, 학교명, 학년</span></span><br><span class="line"><span class="comment">    - 행위: 공부하기, 먹기, 잠자기</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">var</span> age: <span class="type">UInt</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> school: <span class="type">String</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">var</span> schoolYear: <span class="type">UInt</span> = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">study</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"빡공"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">eat</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"처묵처묵"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sleep</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"쿨쿨"</span>)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Iphone</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     ** 아이폰(IPhone)</span></span><br><span class="line"><span class="comment">     - 속성: 기기명, 가격, faceID 기능 여부(Bool)</span></span><br><span class="line"><span class="comment">     - 행위: 전화 걸기, 문자 전송</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> device: <span class="type">String</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">var</span> price: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> faceID: <span class="type">Bool</span> = <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">call</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"따르릉"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sms</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"문자"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coffee</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     ** 커피(Coffee)</span></span><br><span class="line"><span class="comment">     - 속성: 이름, 가격, 원두 원산지</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span> = <span class="string">""</span></span><br><span class="line">    <span class="keyword">var</span> price: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> origin: <span class="type">String</span> = <span class="string">""</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>계산기 클래스를 만들고 다음과 같은 기능을 가진 Property 와 Method 정의해보기</li></ol><p>** 계산기 (Calculator)</p><ul><li>속성: 현재 값</li><li>행위: 더하기, 빼기, 나누기, 곱하기, 값 초기화</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Calculator</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value: <span class="type">Double</span> = <span class="number">0</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> add: Double)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.value += add</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.value</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">subtract</span><span class="params">(<span class="number">_</span> sub: Double)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.value -= sub</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.value</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">multiply</span><span class="params">(<span class="number">_</span> mul: Double)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.value *= mul</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.value</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">divide</span><span class="params">(<span class="number">_</span> div: Double)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.value /= div</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.value</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reset</span><span class="params">()</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.value = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> calculator = <span class="type">Calculator</span>() <span class="comment">// 객체생성</span></span><br><span class="line"></span><br><span class="line">calculator.value  <span class="comment">// 0</span></span><br><span class="line">calculator.add(<span class="number">10</span>)    <span class="comment">// 10</span></span><br><span class="line">calculator.add(<span class="number">5</span>)     <span class="comment">// 15</span></span><br><span class="line"></span><br><span class="line">calculator.subtract(<span class="number">9</span>)  <span class="comment">// 6</span></span><br><span class="line">calculator.subtract(<span class="number">10</span>) <span class="comment">// -4</span></span><br><span class="line"></span><br><span class="line">calculator.multiply(<span class="number">4</span>)   <span class="comment">// -16</span></span><br><span class="line">calculator.multiply(-<span class="number">10</span>) <span class="comment">// 160</span></span><br><span class="line"></span><br><span class="line">calculator.divide(<span class="number">10</span>)   <span class="comment">// 16</span></span><br><span class="line">calculator.reset()      <span class="comment">// 0</span></span><br></pre></td></tr></table></figure><ol start="3"><li>첨부된 그림을 참고하여 각 도형별 클래스를 만들고 각각의 넓이, 둘레, 부피를 구하는 프로퍼티와 메서드 구현하기</li></ol><img src="/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-6/hexo_one.png" class="" title="hexo"><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Poly</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width: <span class="type">Double?</span></span><br><span class="line">    <span class="keyword">var</span> height: <span class="type">Double?</span></span><br><span class="line">    <span class="keyword">var</span> length: <span class="type">Double?</span></span><br><span class="line">    <span class="keyword">var</span> radius: <span class="type">Double?</span></span><br><span class="line">    <span class="keyword">var</span> upperWidth: <span class="type">Double?</span></span><br><span class="line">    <span class="keyword">var</span> pi: <span class="type">Double</span> = <span class="number">3.14</span></span><br><span class="line">    <span class="keyword">var</span> <span class="type">A</span>: <span class="type">Double?</span> = <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">var</span> <span class="type">P</span>: <span class="type">Double?</span> = <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">var</span> <span class="type">C</span>: <span class="type">Double?</span> = <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">var</span> <span class="type">V</span>: <span class="type">Double?</span> = <span class="literal">nil</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">init</span>(width: <span class="type">Double?</span> = <span class="literal">nil</span>,upperWidth: <span class="type">Double?</span> = <span class="literal">nil</span>, length: <span class="type">Double?</span> = <span class="literal">nil</span>, height: <span class="type">Double?</span> = <span class="literal">nil</span>,radius: <span class="type">Double?</span> = <span class="literal">nil</span>, poly: <span class="type">Int?</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span> poly &#123;</span><br><span class="line">        <span class="comment">// square</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> w = width &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">A</span> = w * w</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">P</span> = <span class="number">4</span> * w</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="comment">// rectangle</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> w = width, <span class="keyword">let</span> h = height &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">A</span> = w * h</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">P</span> = (<span class="number">2</span> * w) + (<span class="number">2</span> * h)</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> r = radius &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">A</span> = <span class="keyword">self</span>.pi * (r * r)</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">C</span> = <span class="number">2</span> * <span class="keyword">self</span>.pi * r</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> w = width, <span class="keyword">let</span> h = height &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">A</span> = <span class="number">0.5</span> * w * h</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> uw = upperWidth, <span class="keyword">let</span> w = width, <span class="keyword">let</span> h = height &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">A</span> = <span class="number">0.5</span> * h * ( uw + w )</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> w = width &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">V</span> = w * w * w</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> w = width, <span class="keyword">let</span> l = length, <span class="keyword">let</span> h = height &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">V</span> = w * l * h</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> r = radius, <span class="keyword">let</span> h = height &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">V</span> = <span class="keyword">self</span>.pi * (r * r) * h</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> r = radius &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.<span class="type">V</span> = <span class="number">1.3</span> * <span class="keyword">self</span>.pi * (r * r * r)</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> r = radius, <span class="keyword">let</span> h = height &#123;</span><br><span class="line">                <span class="keyword">self</span>.<span class="type">V</span> = <span class="number">0.3</span> * <span class="keyword">self</span>.pi * (r * r) * h</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">self</span>.width = <span class="number">0</span></span><br><span class="line">            <span class="keyword">self</span>.height = <span class="number">0</span></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getResult</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"--------------------"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"넓이(A): "</span>, <span class="keyword">self</span>.<span class="type">A</span> ?? <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"둘레(P): "</span>, <span class="keyword">self</span>.<span class="type">P</span> ?? <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"원의둘레(C): "</span>, <span class="keyword">self</span>.<span class="type">C</span> ?? <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"부피(V): "</span>, <span class="keyword">self</span>.<span class="type">V</span> ?? <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>...<span class="number">9</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    <span class="type">Poly</span>(width: <span class="number">5</span>,upperWidth: <span class="number">5</span>, length: <span class="number">5</span>, height: <span class="number">5</span>,radius: <span class="number">4</span>, poly: i).getResult()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo sitemap,robots.txt 추가하기</title>
      <link>http://hongdonghyun.github.io/2019/11/hexo-sitemap-robots-txt-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/</link>
      <guid>http://hongdonghyun.github.io/2019/11/hexo-sitemap-robots-txt-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Mon, 18 Nov 2019 01:32:06 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;hexo-시리즈-바로가기&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hexo-시리즈-바로가기&quot;&gt;&lt;/a&gt; Hexo 시리즈 바로가기&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://hongdonghyun
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="hexo-시리즈-바로가기"><a class="markdownIt-Anchor" href="#hexo-시리즈-바로가기"></a> Hexo 시리즈 바로가기</h1><ol><li><p><a href="https://hongdonghyun.github.io/2019/11/Hexo%EB%A1%9C%20Github%20Page%20%EB%A7%8C%EB%93%A4%EA%B8%B0/">Hexo로 Github Page 만들기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/hexo-theme-%EC%84%A4%EC%A0%95/">Hexo 테마 설정하기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/hexo-%EB%8C%93%EA%B8%80%EA%B3%B5%EA%B0%84-%EB%A7%8C%EB%93%A4%EA%B8%B0/">Hexo 댓글 만들기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/Hexo-Google-Analytics-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/">구글 애널리틱스 연동하기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/hexo-about-catregory-tags-%EB%AA%A9%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0/">Hexo 메뉴 추가하기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%A9%EB%AC%B8%EC%9E%90-%EC%B9%B4%EC%9A%B4%ED%8C%85%ED%95%98%EA%B8%B0/">블로그 방문자 카운팅</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/hexo-sitemap-robots-txt-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/">sitemap.xmlrobots.txt 추가하기</a></p></li></ol><h1 id="hexo-seo최적화"><a class="markdownIt-Anchor" href="#hexo-seo최적화"></a> hexo SEO최적화</h1><h2 id="seo란"><a class="markdownIt-Anchor" href="#seo란"></a> SEO란?</h2><p>Search Engine Optimization</p><p>검색엔진최적화 라는 뜻을 가지며,</p><p>우리가 만든 웹사이트가 검색엔진에 좀 더 노출이 많이되고, 상위에 노출 되도록 하는것이다.</p><p>웹사이트를 상위노출 시키기 위한 수많은 방법들이 존재하지만</p><p>이번 포스팅에서는 가장 기초적이며 SEO에 기본이 되는 부분들을 세팅해보려고 한다.</p><ul><li>sitemap.xml</li><li>robots.txt</li><li>rss</li></ul><h2 id="sitemap"><a class="markdownIt-Anchor" href="#sitemap"></a> sitemap</h2><p>사이트맵은 일종의 지도다.<br />검색엔진들을 위한 지도라고 생각하면 된다.<br />검색엔진에게 우리 사이트의 구조를 알려주는 파일이라고 생각하면 된다.</p><h3 id="설치-및-적용"><a class="markdownIt-Anchor" href="#설치-및-적용"></a> 설치 및 적용</h3><ol><li><code>블로그 루트 디렉토리</code>에서 해당 플러그인 설치</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-seo-friendly-sitemap --save</span><br></pre></td></tr></table></figure><ol start="2"><li>에디터로 <code>블로그 루트 디렉토리</code>에 있는 <code>_config.yml</code>을 열어준다.</li></ol><blockquote><p><code>theme/</code>안에 있는 <code>_config.yml</code> 아닙니다.</p></blockquote><ol start="3"><li>다음과 같은 내용을 적어준다.</li></ol><img src="/2019/11/hexo-sitemap-robots-txt-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/hexo_seo1.png" class="" title="hexo_seo1"><p>path값은 필수이며, 나머지 옵션은 선택입니다.</p><ul><li><p>path: 루트 디렉토리에 <code>sitemap.xml</code>생성 <code>url/sitemap.xml</code>로 확인이 가능함</p></li><li><p>tag: sitemap에 tag 포함여부</p></li><li><p>category: sitemap에 category 포함여부</p></li></ul><h3 id="확인"><a class="markdownIt-Anchor" href="#확인"></a> 확인</h3><ol><li><p><code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</code></p></li><li><p><code>localhost:4000/sitemap.xml</code> 으로 접근하여 확인</p></li></ol><h2 id="robotstxt"><a class="markdownIt-Anchor" href="#robotstxt"></a> robots.txt</h2><p>웹사이트에는 검색엔진에 노출되야하는 페이지와 노출되면 안되는 페이지가 존재할 수 있다.</p><blockquote><p>ex)<br />admin페이지는 노출되면 안된다.<br />상품을 파는 페이지는 노출이 되어야한다.</p></blockquote><p>그러한 페이지들을 구분하여 검색엔진에게 알려주는 파일이다.</p><p>더 자세한 내용을 <a href="https://support.google.com/webmasters/answer/6062596?hl=ko" target="_blank" rel="noopener">여기</a>를 참고하자.</p><h3 id="설치-및-적용-2"><a class="markdownIt-Anchor" href="#설치-및-적용-2"></a> 설치 및 적용</h3><ol><li>설치</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-robotstxt --save</span><br></pre></td></tr></table></figure><ol start="2"><li>에디터로 <code>블로그 루트 디렉토리</code>에 있는 <code>_config.yml</code>을 열어준다.</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">robotstxt:</span><br><span class="line">  useragent: "*"</span><br><span class="line">  allow:</span><br><span class="line">    - /</span><br><span class="line">  sitemap: https://&lt;username&gt;.github.io/sitemap.xml</span><br></pre></td></tr></table></figure><ul><li>useragent: 적용시킬 검색엔진 대상</li></ul><blockquote><p>*은 모든 검색엔진에게 적용</p></blockquote><ul><li>allow: 허용할 페이지</li></ul><blockquote><p>/밑에 모든 페이지를 긁어도 좋다.</p></blockquote><ul><li><p>disallow: 금지할 페이지</p></li><li><p>sitemap: 사이트맵의 위치</p></li></ul><blockquote><p><username> 여러분의 github page 주소를 적어주시면 됩니다.</p></blockquote><h3 id="확인-2"><a class="markdownIt-Anchor" href="#확인-2"></a> 확인</h3><ol><li><p><code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</code></p></li><li><p><code>localhost:4000/robots.txt</code> 으로 접근하여 확인</p></li></ol><h2 id="rss"><a class="markdownIt-Anchor" href="#rss"></a> rss</h2><p>RSS feed 는 사이트내의 최신 콘텐츠를 담고 있는 파일</p><p>검색엔진에게 새글 목록만 따로 긁을 수 있게 해준다고 생각하자.</p><h3 id="설치-및-적용-3"><a class="markdownIt-Anchor" href="#설치-및-적용-3"></a> 설치 및 적용</h3><ol><li>설치</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><ol start="2"><li><p>에디터로 <code>블로그 루트 디렉토리</code>에 있는 <code>_config.yml</code>을 열어준다.</p></li><li><p>파일 수정</p></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">rss2</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">rss2.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li>type: rss파일 타입</li><li>path: 최신피드가 생성될 경로</li><li>limit: 최신 포스트 갯수</li></ul><h3 id="확인-3"><a class="markdownIt-Anchor" href="#확인-3"></a> 확인</h3><ol><li><p><code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server</code></p></li><li><p><code>localhost:4000</code> 으로 접근하여 사이드바에 rss버튼을 눌러보자.</p></li></ol>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/hexo-sitemap-robots-txt-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>블로그 방문자 카운팅하기</title>
      <link>http://hongdonghyun.github.io/2019/11/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%A9%EB%AC%B8%EC%9E%90-%EC%B9%B4%EC%9A%B4%ED%8C%85%ED%95%98%EA%B8%B0/</link>
      <guid>http://hongdonghyun.github.io/2019/11/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%A9%EB%AC%B8%EC%9E%90-%EC%B9%B4%EC%9A%B4%ED%8C%85%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Sun, 17 Nov 2019 13:06:42 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;hexo-시리즈-바로가기&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hexo-시리즈-바로가기&quot;&gt;&lt;/a&gt; Hexo 시리즈 바로가기&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://hongdonghyun
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="hexo-시리즈-바로가기"><a class="markdownIt-Anchor" href="#hexo-시리즈-바로가기"></a> Hexo 시리즈 바로가기</h1><ol><li><p><a href="https://hongdonghyun.github.io/2019/11/Hexo%EB%A1%9C%20Github%20Page%20%EB%A7%8C%EB%93%A4%EA%B8%B0/">Hexo로 Github Page 만들기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/hexo-theme-%EC%84%A4%EC%A0%95/">Hexo 테마 설정하기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/hexo-%EB%8C%93%EA%B8%80%EA%B3%B5%EA%B0%84-%EB%A7%8C%EB%93%A4%EA%B8%B0/">Hexo 댓글 만들기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/Hexo-Google-Analytics-%EC%97%B0%EB%8F%99%ED%95%98%EA%B8%B0/">구글 애널리틱스 연동하기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/hexo-about-catregory-tags-%EB%AA%A9%EB%A1%9D-%EB%A7%8C%EB%93%A4%EA%B8%B0/">Hexo 메뉴 추가하기</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%A9%EB%AC%B8%EC%9E%90-%EC%B9%B4%EC%9A%B4%ED%8C%85%ED%95%98%EA%B8%B0/">블로그 방문자 카운팅</a></p></li><li><p><a href="https://hongdonghyun.github.io/2019/11/hexo-sitemap-robots-txt-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/">sitemap.xmlrobots.txt 추가하기</a></p></li></ol><h1 id="블로그-방문자조회수-카운팅"><a class="markdownIt-Anchor" href="#블로그-방문자조회수-카운팅"></a> 블로그 방문자,조회수 카운팅</h1><h1 id="포스팅을-참고하시기전에"><a class="markdownIt-Anchor" href="#포스팅을-참고하시기전에"></a> 포스팅을 참고하시기전에…</h1><p>해당 포스팅은 <code>Hexo</code>, <code>next</code>테마를 기준으로 작성 되었으며 <strong>테마별로 지원이 되지 않거나 적용방법이 다를 수 있으니 테마별 공식문서를 참고해주세요</strong>.</p><h2 id="busuanzi"><a class="markdownIt-Anchor" href="#busuanzi"></a> busuanzi</h2><p><code>next</code> 테마 설정파일을 구경하던중</p><p><code>busuanzi_count</code>라는 옵션을 발견했다.</p><img src="/2019/11/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%A9%EB%AC%B8%EC%9E%90-%EC%B9%B4%EC%9A%B4%ED%8C%85%ED%95%98%EA%B8%B0/hexo_busuanzi2.png" class="" title="hexo_busuanzi2"><blockquote><p>enable을 <code>true</code>로 해주면 쓸 수 있다.</p></blockquote><p>해당 내용을 검색해보니 홈페이지의 방문자와 조회수를 카운트 해주는 라이브러리 라는것을 알게 되었다.</p><p><a href="https://busuanzi.ibruce.info/" target="_blank" rel="noopener">부수안지</a></p><p>중국어로 되어있어 번역기의 힘을 빌려야 했지만<br />첫 화면에서 <code>script</code>코드를 주는것을 보고 대강 사용법을 알것 같았다.</p><p>1개의 <code>script</code>코드와 2개의 <code>span</code>코드를 주고 있다.</p><img src="/2019/11/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%A9%EB%AC%B8%EC%9E%90-%EC%B9%B4%EC%9A%B4%ED%8C%85%ED%95%98%EA%B8%B0/hexo_busuanzi1.png" class="" title="hexo_busuanzi1"><p>이제 이 코드를 테마 어딘가에 넣어주면 된다는 것이다.</p><h2 id="적용하기"><a class="markdownIt-Anchor" href="#적용하기"></a> 적용하기</h2><p><a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">공식문서</a>를 좀 더 살펴보니<br /><code>hexo/theme/layout/_partials</code>의 <code>footer.ejs</code>파일에 내용을 추가하라고 한다.</p><p>왜인지 모르겠지만 난 <code>ejs</code>파일이 아니라 <code>swig</code>파일이다.</p><p>별차이는 없을것 같아 <code>footer.swig</code>파일에 내용을 추가해 주었다.</p><h3 id="script"><a class="markdownIt-Anchor" href="#script"></a> script</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;%- if theme.busuanzi.enabled %&#125;</span><br><span class="line">&lt;script async src = &quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script &gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h3 id="span"><a class="markdownIt-Anchor" href="#span"></a> span</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.busuanzi.enabled %&#125;</span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class="line"> 총 조회 &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; 회</span><br><span class="line">&lt;/span&gt; |</span><br><span class="line"></span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line"> 총 방문자 &lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt; 명</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>footer.swig파일 가장 하단에 내용을 추가해주자.</p></blockquote><h2 id="확인"><a class="markdownIt-Anchor" href="#확인"></a> 확인</h2><p><code>script</code>,<code>span</code>을 넣고 자신의 블로그 가장 하단으로 가면<br />조회수와 방문자수가 찍혀있다.</p><h2 id="위치변경"><a class="markdownIt-Anchor" href="#위치변경"></a> 위치변경</h2><ul><li><p>만약 조회수,방문자수 중 보여주고 싶지 않은게 있다면 주석처리만 해주면 된다.</p></li><li><p>홈페이지 하단이 아니라 다른곳에서 노출하고 싶다면 노출하고 싶은 부분에 <code>span</code>만<br />추가해주면 해당부분에서 잘 보인다.</p></li></ul>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%B0%A9%EB%AC%B8%EC%9E%90-%EC%B9%B4%EC%9A%B4%ED%8C%85%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>객체지향이란 도대체 무엇인가</title>
      <link>http://hongdonghyun.github.io/2019/11/OOP/</link>
      <guid>http://hongdonghyun.github.io/2019/11/OOP/</guid>
      <pubDate>Fri, 15 Nov 2019 07:57:58 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;객체지향이 무엇일까를 생각하면서 정리를 해보고 있습니다.&lt;/p&gt;
&lt;p&gt;이상한점이나 설명상 오류를 범하는 부분이 있다면 댓글 부탁드리겠습니다.&lt;/p&gt;
&lt;h1 id=&quot;oopobject-oriented-programming&quot;&gt;&lt;a class=&quot;mark
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>객체지향이 무엇일까를 생각하면서 정리를 해보고 있습니다.</p><p>이상한점이나 설명상 오류를 범하는 부분이 있다면 댓글 부탁드리겠습니다.</p><h1 id="oopobject-oriented-programming"><a class="markdownIt-Anchor" href="#oopobject-oriented-programming"></a> OOP(Object Oriented Programming)</h1><p><a href="https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D" target="_blank" rel="noopener">객체 지향 프로그래밍 위키백과</a></p><p>위키백과에서는 객체 지향 프로그래밍을 다음과 같이 설명 하고 있다.</p><p>객체 지향 프로그래밍은 컴퓨터 프로그램을 명령어의 목록으로 보는 시각에서 벗어나 여러 개의 독립된 단위, 즉 <code>객체</code>들의 모임으로 파악하고자 하는 것이다.</p><h2 id="object객체"><a class="markdownIt-Anchor" href="#object객체"></a> Object(객체)</h2><p><code>객체(Object)</code>라는 단어가 계속 나온다.</p><p>객체 지향 프로그래밍을 이해하기전 객체(Object)가 무엇인지 제대로 이해할 필요가 있다.</p><p><code>객체(Object)</code>를 가장 간단한 말로 번역해보면 <code>물건</code>이라는 뜻이다.</p><p>물건이라는 단어의 포함되는것들을 찾아보자면</p><p><code>모니터</code>,<code>마우스</code>,<code>빌딩</code>,<code>개구리</code>,<code>강아지</code>등이 될 수 있겠다.</p><p><strong>생물(生物)</strong> 조차도 넓은의미에서 물건이라고 볼 수 있을것이다.</p><blockquote><p>한자로 풀어쓰면 살아 있는 물건 이라는 뜻</p></blockquote><p>그리고 그 모든 물건들은 <strong>쓰임새</strong>가 존재한다.</p><blockquote><p>개인적으로 세상에서 가장 쓸모없다고 느낀 생물체인 불가사리조차 비료로 쓰인다고 한다.</p></blockquote><p>모든 객체는 쓰임새가 있을것이다.</p><p>한줄로 요약하자면 <strong>저마다 역할을 가지고 있는것을 객체라고 볼 수 있겠다.</strong></p><p>객체라는것이 존재자체만으로도 쓰임새가 있을 수 있겠지만, 상당수의 객체는 누군가 사용을 해주어야 쓰임새를 가질 수 있다.</p><p>이해를 돕기 위한 짤</p><img src="/2019/11/OOP/oop_img1.jpeg" class="" title="oop_img1"> <blockquote><p>싸워야 할 때 싸워야 <s>객체</s> 건달이 될 수 있다.</p></blockquote><p>객체들이 가지고 있는 성질들을 생각나는대로 정렬해 보았다.</p><ul><li>객체는 저마다 맡은 역할(쓰임새)가 있다.</li><li>객체는 지시를 받음으로써 자신의 역할을 수행한다.</li></ul><blockquote><p>짤에서 보듯 건달한테 싸우라고 지시하는건 결국 최형배(하정우) 아니겠는가?</p></blockquote><ul><li>객체는 나름대로의 특성을 가지고 있다.</li></ul><blockquote><p>‘범죄와의전쟁’ 영화를 보면 최형배는 다리를 절고 있다.<br />최형배만이 가지고 있는 특성이라고 볼 수 있을것이다. (스포죄송…)</p></blockquote><ul><li>비슷한 특성을 가진 객체들을 모아 '클래스’를 지을 수 있다.</li></ul><blockquote><p>건달들이 모여있으면 조폭(조직폭력배)이라고 한다.</p></blockquote><h2 id="object-oriented객체지향"><a class="markdownIt-Anchor" href="#object-oriented객체지향"></a> Object Oriented(객체지향)</h2><p><code>객체(Object)</code>라는 것을 위에서 알아보았다.</p><p>그럼 지향(Oriented)은 무엇일까?</p><p>국어사전에 검색해보면 <code>어떤 목표로 뜻이 쏠리어 향함.</code></p><p>두 단어를 합치면</p><ul><li><code>객체를 향한다.</code></li><li><code>객체를 추구한다.</code></li></ul><p>말이 이상해진다.</p><p>적어도 객체지향에서의 지향은 <code>방향성</code>의 뜻보다, <code>위주</code>라는 말이 좀 더 어울린다고 생각한다.</p><p>다시 합쳐보면 <code>객체 위주의</code> 정도의 뜻으로 이해할 수 있을것 같다.</p><h2 id="object-oriented-programming-객체지향프로그래밍"><a class="markdownIt-Anchor" href="#object-oriented-programming-객체지향프로그래밍"></a> Object Oriented Programming (객체지향프로그래밍)</h2><p>그럼 이제 모든 단어를 다시 합쳐보자.</p><p>이제 어느정도 말이 된다고 생각한다.</p><p><code>객체 위주의 프로그램을 작성하자</code>라고 이해할 수 있겠다.</p><p>아까 객체에서 나열한대로 객체의 성질들을 코드상으로 나타내게 된다면 그것이 바로 <code>객체지향 프로그래밍</code>이 될것이다.</p><p>그리고 그 객체들의 특성을 프로그래밍 언어상으로 구현하기 위해 다음과 같은 개념들이 정립 되기 시작했다.</p><ul><li>클래스 + 인스턴스(객체)</li><li>캡슐화(Encapsulation)</li><li>다형성(Polymorphism)</li><li>상속성(inheritance)</li><li>추상화(abstraction)</li></ul><h3 id="class-instance"><a class="markdownIt-Anchor" href="#class-instance"></a> Class + Instance</h3><h4 id="class추상의-개념"><a class="markdownIt-Anchor" href="#class추상의-개념"></a> Class(추상의 개념)</h4><p>클래스는 표현하기위한 대상(객체)의 공통적인 특징들을 서술한것이다.</p><blockquote><p>클래스는 분류에 대한 개념이며 실체화 된것이 아니다.</p></blockquote><p>이해하기 쉽게 말하자면 <strong>설계도</strong> 정도가 된다.</p><h4 id="instance실체화의-개념"><a class="markdownIt-Anchor" href="#instance실체화의-개념"></a> Instance(실체화의 개념)</h4><p>클래스에서 정의한것을 바탕으로</p><p>실제 메모리에 할당이 된것들</p><blockquote><p>프로그램안에서 만들어졌다고 생각하자.</p></blockquote><h3 id="캡슐화encapsulation"><a class="markdownIt-Anchor" href="#캡슐화encapsulation"></a> 캡슐화(Encapsulation)</h3><p>캡슐화는 일반적으로 연관이 있는 데이터들을 묶는 작업을 말한다.</p><p>연관이 있는것들을 묶어서 생각을 하는건 자연스러운 일이다.</p><blockquote><p>네이버에 하정우를 치면 연관검색어로 김이 나오지 않는가?<br />연관이 있는것들을 묶는건 매우 자연스러운 일이다.</p></blockquote><p>객체 지향 프로그래밍에선 이렇게 연관된 변수 또는 함수들을 분류하고 묶어주는것을 말한다.</p><blockquote><p>필요한거만 보여주고 필요없는건 보여주지 않는 정보은닉의 개념도 포함하고 있다.</p></blockquote><h3 id="다형성polymorphism"><a class="markdownIt-Anchor" href="#다형성polymorphism"></a> 다형성(Polymorphism)</h3><p>Polymorphism = Poly(많은,여러) + morph(형태) 라는 두개의 단어가 합쳐진 말이다.</p><blockquote><p>그리스어임<br />여러가지 형태라는 뜻을 가지고 있다.</p></blockquote><p>우리가 키보드를 사용할 때 수많은 키(객체)를 동작시킬 수 있는 방법은 키를 누르는것(지시)이다.</p><p>하지만 똑같은 동작(키를 누르는것)을 해도 엔터(실행),ESC(취소),Sapce Bar(띄워쓰기)를 누를때 동작이 같지 않다는걸 우리는 알고있다.</p><p>이러한 것을 다형성이라고 표현한다.</p><blockquote><p>같은명령을 각각 다른 객체에 줄 수 있다.</p></blockquote><h3 id="상속성inheritance"><a class="markdownIt-Anchor" href="#상속성inheritance"></a> 상속성(inheritance)</h3><p>우리는 클래스가 연관되어 있는 데이터들을 묶어서 가지고 있다는것(캡슐화)을 알고 있다.</p><p>이러한 클래스가 가지고 있는 특징들을 그대로 다른 클래스가 물려 받는것을 상속한다고 표현한다.</p><img src="/2019/11/OOP/oop_inheritance.png" class="" title="oop_inheritance"> <p><s>왕위를 멋대로 상속받는 아서스 짤</s></p><h3 id="추상화abstraction"><a class="markdownIt-Anchor" href="#추상화abstraction"></a> 추상화(abstraction)</h3><p>자동차를 예시로 들어 보겠다.<br />자동차는 흡입,압축,동력,배기라는 4행정 사이클을 통해 약 2만여개의 부품이 맞물려 움직이는 객체이다.</p><p>하지만 우리가 그런걸 알 필요가 있었는가?</p><p>우리는 그저 핸들,엑셀,브레이크,기어가 무슨역할을 하는지만 알면 자동차를 움직일 수 있다.</p><blockquote><p>운전을 잘하는거랑은 별개임</p></blockquote><p>이러한 것을 추상화라고 한다.</p><p>객체를 사용할 때(지시) 사용자는 어떠한 원리로 그 객체가 이루어졌는지 완벽히 이해하지 않아도 그저 사용법에 맞게 사용하면 되는 것이다.</p><p>미술에도 이러한 개념이 있다.<br />바로 추상미술이라는것이다.</p><p>대상을 구체적인 형상으로 나타내는것이 아니라</p><p>점,선,면,색을 통해 핵심적인 부분만 나타내어  그리는것을 말한다.</p><p><strong>자세한 내부정보는 숨기고 핵심적인 기능만 간추려 보여주는것을 추상화라고 한다.</strong></p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/OOP/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift 과제 풀이 5</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-5/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-5/</guid>
      <pubDate>Fri, 15 Nov 2019 07:41:51 GMT</pubDate>
      <description>
      
        
        
          &lt;ol&gt;
&lt;li&gt;정수를 하나 입력받아 2의 배수 여부를 반환하는 클로져&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/
        
      
      </description>
      
      
      <content:encoded><![CDATA[<ol><li>정수를 하나 입력받아 2의 배수 여부를 반환하는 클로져</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> evenCheck = &#123; $<span class="number">0</span> % <span class="number">2</span> == <span class="number">0</span> &#125;</span><br><span class="line"><span class="built_in">print</span>(evenCheck(<span class="number">4</span>))</span><br></pre></td></tr></table></figure><ol start="2"><li>정수를 두 개 입력 받아 곱한 결과를 반환하는 클로져</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> intMul: (<span class="type">Int</span>, <span class="type">Int</span>) -&gt; <span class="type">Int</span> = &#123; $<span class="number">0</span> * $<span class="number">1</span> &#125;</span><br><span class="line"><span class="built_in">print</span>(intMul(<span class="number">4</span>,<span class="number">5</span>))</span><br></pre></td></tr></table></figure><ol start="3"><li>아래 두 클로저를 Syntax Optimization을 이용하여 최대한 줄여보기</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> someClosure: (<span class="type">String</span>, <span class="type">String</span>) -&gt; <span class="type">Bool</span> = &#123; (s1: <span class="type">String</span>, s2: <span class="type">String</span>) -&gt; <span class="type">Bool</span> <span class="keyword">in</span></span><br><span class="line">  <span class="keyword">let</span> isAscending: <span class="type">Bool</span></span><br><span class="line">  <span class="keyword">if</span> s1 &gt; s2 &#123;</span><br><span class="line">    isAscending = <span class="literal">true</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    isAscending = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> isAscending</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> someClosureOptimize: (<span class="type">String</span>, <span class="type">String</span>) -&gt; <span class="type">Bool</span> = &#123; $<span class="number">0</span> &gt; $<span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(someClosureOptimize(<span class="string">"str"</span>,<span class="string">"st"</span>))</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> otherClosure: ([<span class="type">Int</span>]) -&gt; <span class="type">Int</span> = &#123; (values: [<span class="type">Int</span>]) -&gt; <span class="type">Int</span> <span class="keyword">in</span></span><br><span class="line">  <span class="keyword">var</span> <span class="built_in">count</span>: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> values &#123;</span><br><span class="line">    <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">count</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> otherClosureOptimize: ([<span class="type">Int</span>]) -&gt; <span class="type">Int</span> = &#123; $<span class="number">0</span>.<span class="built_in">count</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(otherClosureOptimize([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]))</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-5/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
