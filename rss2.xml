<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hong3의 개발블로그</title>
    <link>http://hongdonghyun.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>개발을 잘하고 싶읍니다</description>
    <pubDate>Mon, 25 Nov 2019 02:06:20 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[Swift]멀리뛰기</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EB%A9%80%EB%A6%AC%EB%9B%B0%EA%B8%B0/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EB%A9%80%EB%A6%AC%EB%9B%B0%EA%B8%B0/</guid>
      <pubDate>Mon, 25 Nov 2019 01:21:45 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12914&quot; targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/12914" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><ol><li>배열로 풀기</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int)</span></span> -&gt; <span class="type">Int64</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> fiboArray = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>..&lt;n &#123;</span><br><span class="line">        fiboArray.append((fiboArray[i] + fiboArray[i+<span class="number">1</span>]) % <span class="number">1234567</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">Int64</span>(fiboArray[n])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>스왑</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int)</span></span> -&gt; <span class="type">Int64</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">1</span></span><br><span class="line">    <span class="keyword">var</span> temp = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> n &lt;= <span class="number">2</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Int64</span>(n) </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">1</span>..&lt;n &#123;</span><br><span class="line">        temp = a + b</span><br><span class="line">        a = b</span><br><span class="line">        b = temp % <span class="number">1234567</span></span><br><span class="line">        <span class="built_in">print</span>(temp,a,b)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Int64</span>(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="리뷰"><a class="markdownIt-Anchor" href="#리뷰"></a> 리뷰</h1><p>처음에 문제를 풀기 위해 경우의 수를 막 적어보다가<br />문제의 해답이 피보나치 수열이라는것을 알았다.</p><p>나같은 사람들의 문제는 <strong><code>피보나치는 재귀로 풀어야해</code></strong> 라는 개념에 갇혀버려서 재귀로 풀려고 하는 것이다.</p><p>사실 재귀가 코드만 짧지 효율이 좋다고 보기가 어렵다.</p><p>어쨋든 해당 문제를 재귀함수로 만들어 풀어보려고 하니<br />이상한 에러메시지를 뿜어내고 실행조차 되지가 않았다.</p><p>그래서 for문을 돌아 계산결과값들은 스왑하는 방식으로 변경해서 풀어보니 이번에는 실행이 되었다.</p><p>다만 코드를 제출하면 특정문제에서 부터 이상한 에러 메시지를 뿜어내면서 실패를 해버리더라</p><p>Swift도 처음 써보고 하니 어디선가 문법이 틀렸나 하고 문법을 뜯어 고치는 엉뚱한 삽질을 했다.</p><p>하나씩 값을 넣어보며 몇부터 실패를 하는지 찾다가 92번부터 실행이 안되더라<br />계산되는 값을 찍어보니 <strong>숫자가 어마어마하게 크다</strong>는걸 확인했다.</p><p>피보나치를 그냥 재귀로 풀면 된다고만 알았지 정작 출력되는 값들을 본적이 없다는게 생각났다.</p><p>Swift의 <code>Int</code>타입이 담을 수 없는크기의 값이 와서 박살이 난다는걸 알았고, 문제에 1234567을 나누라는게 뭔 의미가 있나 했더니 이러한 문제를 해결하기 위한 방법이었다.</p><p>많은것을 느낀 문제였다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EB%A9%80%EB%A6%AC%EB%9B%B0%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift 과제 풀이 9</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-9/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-9/</guid>
      <pubDate>Sun, 24 Nov 2019 13:28:29 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;UISwitch, UISegmentedControl 을 이용한 문제&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;UISwitch
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><ol><li>UISwitch, UISegmentedControl 을 이용한 문제</li></ol><ul><li>UISwitch : On, Off 가 바뀔 때마다 Label 의 내용이 On, Off 로 표시되도록 구현</li><li>UISegmentedControl : 선택 내용이 바뀔 때마다 Label 의 내용도 해당 타이틀 값으로 함께 변경되도록 구현</li></ul><h1 id="코드"><a class="markdownIt-Anchor" href="#코드"></a> 코드</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> itemArray: [<span class="type">String</span>] = [<span class="string">"홍삼"</span>,<span class="string">"Python"</span>,<span class="string">"Django"</span>,<span class="string">"iOS"</span>,<span class="string">"Swift"</span>]</span><br><span class="line">    <span class="keyword">let</span> resultLabel = <span class="type">UILabel</span>()</span><br><span class="line">    <span class="keyword">let</span> toggle = <span class="type">UISwitch</span>()</span><br><span class="line">    <span class="built_in">lazy</span> <span class="keyword">var</span> segControl = <span class="type">UISegmentedControl</span>(items: itemArray)</span><br><span class="line">    <span class="built_in">lazy</span> <span class="keyword">var</span> superViewHeight = view.frame.size.height</span><br><span class="line">    <span class="built_in">lazy</span> <span class="keyword">var</span> superViewWidth = view.frame.size.width</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        initialResultLabel()</span><br><span class="line">        initialToggle()</span><br><span class="line">        initalSegControl()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">initialResultLabel</span><span class="params">()</span></span> &#123;</span><br><span class="line">        resultLabel.frame = <span class="type">CGRect</span>(x: superViewWidth/<span class="number">3</span>, y: superViewHeight - <span class="number">700</span>, width: superViewWidth/<span class="number">2</span>, height: <span class="number">100</span>)</span><br><span class="line">        resultLabel.text = <span class="type">String</span>(<span class="built_in">count</span>)</span><br><span class="line">        resultLabel.isHidden = <span class="literal">true</span></span><br><span class="line">        resultLabel.font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">50</span>)</span><br><span class="line">        view.addSubview(resultLabel)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">initalSegControl</span><span class="params">()</span></span> &#123;</span><br><span class="line">        segControl.frame = <span class="type">CGRect</span>(x: <span class="number">0</span>, y: superViewHeight - <span class="number">400</span>, width: superViewWidth, height: <span class="number">100</span>)</span><br><span class="line">        segControl.addTarget(<span class="keyword">self</span>,action: #selector(actionSegControl(<span class="number">_</span>:)), <span class="keyword">for</span>: .valueChanged)</span><br><span class="line">        view.addSubview(segControl)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">initialToggle</span><span class="params">()</span></span> &#123;</span><br><span class="line">        toggle.frame = <span class="type">CGRect</span>(x: <span class="number">200</span>, y: superViewHeight - <span class="number">500</span>, width: <span class="number">100</span>, height: <span class="number">100</span>)</span><br><span class="line">        toggle.addTarget(<span class="keyword">self</span>,action: #selector(actionToggle(<span class="number">_</span>:)), <span class="keyword">for</span>: .valueChanged)</span><br><span class="line">        view.addSubview(toggle)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">actionSegControl</span><span class="params">(<span class="number">_</span> sender: UISegmentedControl)</span></span> &#123;</span><br><span class="line">        resultLabel.text = itemArray[sender.selectedSegmentIndex]</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">actionAdd</span><span class="params">(<span class="number">_</span> sender: UIButton)</span></span> &#123;</span><br><span class="line">        <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">        resultLabel.text = <span class="type">String</span>(<span class="built_in">count</span>)</span><br><span class="line">        resultLabel.textColor = .systemBlue</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">actionToggle</span><span class="params">(<span class="number">_</span> sender: UISwitch)</span></span> &#123;</span><br><span class="line">        resultLabel.isHidden = !sender.isOn</span><br><span class="line">        <span class="built_in">print</span>(resultLabel.isHidden)</span><br><span class="line">        <span class="built_in">print</span>(superViewWidth)</span><br><span class="line">        <span class="built_in">print</span>(superViewHeight)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="스크린샷"><a class="markdownIt-Anchor" href="#스크린샷"></a> 스크린샷</h1><img src="/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-9/result.png" class="" title="result">]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]가장큰 수</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EA%B0%80%EC%9E%A5%ED%81%B0-%EC%88%98/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EA%B0%80%EC%9E%A5%ED%81%B0-%EC%88%98/</guid>
      <pubDate>Sun, 24 Nov 2019 11:35:08 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42746#_=_&quot; t
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/42746#_=_" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> numbers:[Int])</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> result = numbers.<span class="built_in">map</span>(&#123; <span class="type">String</span>($<span class="number">0</span>) &#125;).sorted(by: &#123;$<span class="number">0</span> + $<span class="number">1</span> &gt; $<span class="number">1</span> + $<span class="number">0</span>&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> result[<span class="number">0</span>] == <span class="string">"0"</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"0"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result.joined()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>맨 처음에 도통 어떻게 풀어야할지 감을 못잡아서<br />한참을 헤맸다.</p><p>그리고 우연히 610과 106중 누가크냐는 힌트를 받았고</p><p>소팅의 규칙을 재정립해서 풀면 할 수 있을것 같았다.</p><p>말이야 쉬웠지 어떻게 하는건지 찾느라 진짜 머리카락이 다 빠질뻔했다.</p><p>어찌어찌 다하고 나서 제출을 했더니 마지막 케이스에서 실패를 해버렸다.</p><p>보통 이런경우에는 문제가 가지고 있는 함정을 해결하지 못해 생기는 경우였다.</p><p>문제에 <strong>0 또는 양의정수</strong>라는것을 확인했고<br />0만 들어있는 배열을 넣고 테스트 해보니 “0000” 이런식의 값이 나왔다.</p><p>그래서 그 부분만 예외처리 해줬다.</p><p>진짜 너무 어려운 문제였다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EA%B0%80%EC%9E%A5%ED%81%B0-%EC%88%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]하샤드 수</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%ED%95%98%EC%83%A4%EB%93%9C-%EC%88%98/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%ED%95%98%EC%83%A4%EB%93%9C-%EC%88%98/</guid>
      <pubDate>Sun, 24 Nov 2019 11:26:15 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;하샤드 수 구하기&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하샤드 수 : 자연수 N의 각 자릿수 숫자의 합을 구한 뒤, 그 합한 숫자로 자기 자신이
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p>하샤드 수 구하기</p><ul><li>하샤드 수 : 자연수 N의 각 자릿수 숫자의 합을 구한 뒤, 그 합한 숫자로 자기 자신이 나누어 떨어지는 수</li></ul><p>e.g. 18의 자릿수 합은 1 + 8 = 9 이고, 18은 9로 나누어 떨어지므로 하샤드 수.</p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> input: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> innerInput = input</span><br><span class="line">    <span class="keyword">var</span> result = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> innerInput != <span class="number">0</span> &#123;</span><br><span class="line">    result += innerInput%<span class="number">10</span></span><br><span class="line">    innerInput = innerInput/<span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result / input == <span class="number">0</span> ? <span class="literal">true</span> : <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p><a href="https://hongdonghyun.github.io/2019/11/Swift-%EC%9E%85%EB%A0%A5%EB%B0%9B%EC%9D%80-%EC%88%AB%EC%9E%90%EC%9D%98-%EB%AA%A8%EB%93%A0%EC%9E%90%EB%A6%AC-%EC%88%AB%EC%9E%90-%ED%95%A9/">입력받은 숫자의 모든자리 합</a><br />해당 내용을 응용하면 금방 구현이 가능하다.</p><p>하샤드 수를 구하기 위해선 자릿수를 모두 더해줘야 하기 때문에<br />나온 결과에서 자기자신으로 나누어 떨어지는지 확인하면 된다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%ED%95%98%EC%83%A4%EB%93%9C-%EC%88%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]입력받은 숫자의 모든자리 숫자 합</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EC%9E%85%EB%A0%A5%EB%B0%9B%EC%9D%80-%EC%88%AB%EC%9E%90%EC%9D%98-%EB%AA%A8%EB%93%A0%EC%9E%90%EB%A6%AC-%EC%88%AB%EC%9E%90-%ED%95%A9/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EC%9E%85%EB%A0%A5%EB%B0%9B%EC%9D%80-%EC%88%AB%EC%9E%90%EC%9D%98-%EB%AA%A8%EB%93%A0%EC%9E%90%EB%A6%AC-%EC%88%AB%EC%9E%90-%ED%95%A9/</guid>
      <pubDate>Sun, 24 Nov 2019 11:14:35 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;입력받은 숫자의 모든 자리 숫자 합계를 출력하기&lt;/p&gt;
&lt;p&gt;e.g.  123 -&amp;gt; 6 ,  5678 -&amp;gt; 26&lt;/p&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p>입력받은 숫자의 모든 자리 숫자 합계를 출력하기</p><p>e.g.  123 -&gt; 6 ,  5678 -&gt; 26</p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> input: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> input = input</span><br><span class="line">    <span class="keyword">var</span> result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> input != <span class="number">0</span> &#123;</span><br><span class="line">    result += input%<span class="number">10</span></span><br><span class="line">    input = input/<span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>입력받은 정수를 10으로 나머지 연산을 하게 되면<br />가장 마지막 자릿수가 나오게 되고</p><p>그 결과를 변수에 더해준다.</p><p>남은 수들을 계속해서 구해주어야 하기 때문에<br />10으로 나누기 연산을 하게되면 몫이 나오게 되고<br />이 과정에서 소수점으로 나오는 경우가 있다.</p><p>하지만 우리는 정수형이기 때문에 소수점은 알아서 탈락하게 되기 때문에 몫이 0이 아닐때까지 계속해서 연산해주면 원하는 결과값을 얻을 수 있다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EC%9E%85%EB%A0%A5%EB%B0%9B%EC%9D%80-%EC%88%AB%EC%9E%90%EC%9D%98-%EB%AA%A8%EB%93%A0%EC%9E%90%EB%A6%AC-%EC%88%AB%EC%9E%90-%ED%95%A9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]송전탑</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EC%86%A1%EC%A0%84%ED%83%91/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EC%86%A1%EC%A0%84%ED%83%91/</guid>
      <pubDate>Fri, 22 Nov 2019 01:21:33 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42588&quot; targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/42588" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> heights:[Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> resultArray: [<span class="type">Int</span>] = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">stride</span>(from:heights.<span class="built_in">count</span>-<span class="number">1</span>, to:-<span class="number">1</span>, by:-<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> flag = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">stride</span>(from:i-<span class="number">1</span>,to:-<span class="number">1</span>,by:-<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> heights[i] &lt; heights[j] &#123;</span><br><span class="line">                flag = <span class="literal">false</span></span><br><span class="line">                resultArray.insert(j+<span class="number">1</span>,at:<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> flag &#123;</span><br><span class="line">            resultArray.insert(<span class="number">0</span>,at:<span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> resultArray</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p><a href="https://hongdonghyun.github.io/2019/11/Swift-Bubble-Sort/">버블소트</a>에서 공부했던 내용을 응용했다.</p><p>먼저 배열은 가장뒤에서 돌도록 이중for문을 작성하고</p><p>인접한 값부터 차례로 비교하여 새로운 배열에 추가하도록 만들었다.</p><p>그리고 flag라는 변수를 만들어 안쪽 for문이 도는동안 한번도 if문에 걸리지 않았다면</p><p>0을 추가하여 답은 만들어내도록 했다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EC%86%A1%EC%A0%84%ED%83%91/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]정수 내림차순으로 배치하기</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Fri, 22 Nov 2019 01:04:47 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12933&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;프로그래머스 링크&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;code&quot;&gt;&lt;a clas
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><a href="https://programmers.co.kr/learn/courses/30/lessons/12933" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><h1 id="처음"><a class="markdownIt-Anchor" href="#처음"></a> 처음</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int64)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> intArray: [<span class="type">Int</span>] = []</span><br><span class="line">    <span class="keyword">var</span> result = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">String</span>(n) &#123;</span><br><span class="line">        intArray.append(<span class="type">Int</span>(<span class="type">String</span>(i)) ?? <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    intArray.<span class="built_in">sort</span>(by: &gt;)</span><br><span class="line">    <span class="number">_</span> = intArray.<span class="built_in">map</span>&#123; result = result + <span class="string">"\($0)"</span> &#125;</span><br><span class="line">    <span class="keyword">let</span> myInt = <span class="type">Int</span>(result)</span><br><span class="line">    <span class="keyword">return</span> myInt!</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="한줄로"><a class="markdownIt-Anchor" href="#한줄로"></a> 한줄로</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int64)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Int</span>(<span class="type">String</span>(<span class="type">String</span>(n).sorted(by: &gt;)))!</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>입력받은 정수를 문자열로 형변환 하여 다시 정수로 변환하고 swift기본 소팅 메서드로 정렬후 반환할 생각으로 코드를 작성했다.</p><p>그리고 반환타입이 정수형이라 반환하기전 다시 정수로 바꿔주는 작업을 진행했다.</p><p>형변환 하는 과정이 너무많아서 과정을 좀 줄이고 싶었다.</p><p>찾아보다가 문자열에도 소팅이 가능하다는걸 찾고,<br />문자열 배열을 스트링으로 형변환하면 문자열로 바뀐다는걸 찾았다.</p><p>그 결과 코드가 한줄로 바뀌었다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EC%A0%95%EC%88%98-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%B9%98%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift 과제 풀이 8</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-8/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-8/</guid>
      <pubDate>Thu, 21 Nov 2019 12:54:19 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Button을 누를 때마다 Label 의 값 변경하기
&lt;ol&gt;
&lt;li&gt;+버튼 또는 -버튼을 누르면 숫자가 증가/감소하도
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><ul><li>Button을 누를 때마다 Label 의 값 변경하기<ol><li>+버튼 또는 -버튼을 누르면 숫자가 증가/감소하도록 만들기</li><li>숫자가 증가할 때는 label의 텍스트 색을 파란색, 감소할 때는 빨간색으로 변경</li></ol></li></ul><h1 id="코드"><a class="markdownIt-Anchor" href="#코드"></a> 코드</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> resultLabel = <span class="type">UILabel</span>()</span><br><span class="line">    <span class="keyword">let</span> subBtn = <span class="type">UIButton</span>(type: .system)</span><br><span class="line">    <span class="keyword">let</span> addBtn = <span class="type">UIButton</span>(type: .system)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        resultLabel.frame = <span class="type">CGRect</span>(x: <span class="number">200</span>, y: <span class="number">300</span>, width: <span class="number">100</span>, height: <span class="number">100</span>)</span><br><span class="line">        resultLabel.text = <span class="type">String</span>(<span class="built_in">count</span>)</span><br><span class="line">        resultLabel.font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">50</span>)</span><br><span class="line">        </span><br><span class="line">        addBtn.setTitle(<span class="string">"+"</span>, <span class="keyword">for</span>: .normal)</span><br><span class="line">        addBtn.frame = <span class="type">CGRect</span>(x: <span class="number">20</span>, y: <span class="number">400</span>, width: <span class="number">150</span>, height: <span class="number">50</span>)</span><br><span class="line">        addBtn.titleLabel?.font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">30</span>)</span><br><span class="line">        addBtn.layer.borderWidth = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        addBtn.addTarget(<span class="keyword">self</span>, action: #selector(actionAdd(<span class="number">_</span>:)), <span class="keyword">for</span>: .touchUpInside)</span><br><span class="line">        </span><br><span class="line">        subBtn.setTitle(<span class="string">"-"</span>, <span class="keyword">for</span>: .normal)</span><br><span class="line">        subBtn.frame = <span class="type">CGRect</span>(x: <span class="number">240</span>, y: <span class="number">400</span>, width: <span class="number">150</span>, height: <span class="number">50</span>)</span><br><span class="line">        subBtn.titleLabel?.font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">30</span>)</span><br><span class="line">        subBtn.layer.borderWidth = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        subBtn.addTarget(<span class="keyword">self</span>, action: #selector(actionSub(<span class="number">_</span>:)), <span class="keyword">for</span>: .touchUpInside)</span><br><span class="line">        </span><br><span class="line">        view.addSubview(addBtn)</span><br><span class="line">        view.addSubview(subBtn)</span><br><span class="line">        view.addSubview(resultLabel)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">actionAdd</span><span class="params">(<span class="number">_</span> sender: UIButton)</span></span> &#123;</span><br><span class="line">        <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">        resultLabel.text = <span class="type">String</span>(<span class="built_in">count</span>)</span><br><span class="line">        resultLabel.textColor = .systemBlue</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">actionSub</span><span class="params">(<span class="number">_</span> sender: UIButton)</span></span> &#123;</span><br><span class="line">        <span class="built_in">count</span> -= <span class="number">1</span></span><br><span class="line">        resultLabel.text = <span class="type">String</span>(<span class="built_in">count</span>)</span><br><span class="line">        resultLabel.textColor = .systemRed</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="스크린샷"><a class="markdownIt-Anchor" href="#스크린샷"></a> 스크린샷</h1><img src="/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-8/result1.png" class="" title="result1"><img src="/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-8/result2.png" class="" title="result2">]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EA%B3%BC%EC%A0%9C-%ED%92%80%EC%9D%B4-8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]최대공약수,최소공배수</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/</guid>
      <pubDate>Thu, 21 Nov 2019 11:02:02 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2개의 정수를 입력했을 때 그에 대한 최소공배수와 최대공약수 구하기&lt;/li&gt;
&lt;li&gt;e.g.  Input : 6, 9 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><ul><li>2개의 정수를 입력했을 때 그에 대한 최소공배수와 최대공약수 구하기</li><li>e.g.  Input : 6, 9   -&gt;  Output : 18, 3</li></ul><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>최소공배수가 최대공약수를 구하면 쉽게 풀린다고 해서 좀 찾아보고</p><p>최대공약수를 재귀함수로 한번 풀어보았다.</p><h1 id="코드"><a class="markdownIt-Anchor" href="#코드"></a> 코드</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 최대공약수</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GCD</span><span class="params">(<span class="number">_</span> <span class="built_in">min</span>: Int, <span class="number">_</span> <span class="built_in">max</span>: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> remain = <span class="built_in">min</span> % <span class="built_in">max</span></span><br><span class="line">    <span class="keyword">if</span> remain == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">GCD</span>(<span class="built_in">max</span>, remain)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 최소공배수</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LCM</span><span class="params">(<span class="number">_</span> a: Int, <span class="number">_</span> b:Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a * b / <span class="type">GCD</span>(a,b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98-%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>[Swift]369</title>
      <link>http://hongdonghyun.github.io/2019/11/Swift-369/</link>
      <guid>http://hongdonghyun.github.io/2019/11/Swift-369/</guid>
      <pubDate>Thu, 21 Nov 2019 11:01:21 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;숫자를 입력받아 1부터 해당 숫자까지 출력하되, 3, 6, 9가 하나라도 포함되어 있는 숫자는 *로 표시&lt;/p&gt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><ul><li><p>숫자를 입력받아 1부터 해당 숫자까지 출력하되, 3, 6, 9가 하나라도 포함되어 있는 숫자는 *로 표시</p></li><li><p>e.g.  1, 2, *, 4, 5, *, 7, 8, *, 10, 11, 12, *, 14, 15, * …</p></li></ul><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>입력받은 숫자까지 문자열 배열을 만든 후<br />contains로 3,6,9인 경우를 체크</p><p>보기 좋게 하기위해 terminator를 &quot; &quot;로 바꿔줬다.</p><h1 id="코드"><a class="markdownIt-Anchor" href="#코드"></a> 코드</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">print369</span><span class="params">(<span class="number">_</span> input: Int)</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> sequence = <span class="type">Array</span>(<span class="built_in">stride</span>(from: <span class="number">1</span>, to: input + <span class="number">1</span>, by: <span class="number">1</span>)).<span class="built_in">map</span> &#123; <span class="type">String</span>($<span class="number">0</span>) &#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> sequence &#123;</span><br><span class="line">        <span class="keyword">if</span> i.<span class="built_in">contains</span>(<span class="string">"3"</span>) || i.<span class="built_in">contains</span>(<span class="string">"6"</span>) || i.<span class="built_in">contains</span>(<span class="string">"9"</span>) &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"*"</span>, terminator: <span class="string">" "</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">print</span>(i, terminator: <span class="string">" "</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2019/11/Swift-369/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
