<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hong3의 개발블로그</title>
    <link>http://hongdonghyun.github.io/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>개발을 잘하고 싶읍니다</description>
    <pubDate>Sun, 21 Jun 2020 08:09:11 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>iOS-환경변수 분리하기</title>
      <link>http://hongdonghyun.github.io/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/</link>
      <guid>http://hongdonghyun.github.io/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/</guid>
      <pubDate>Sun, 21 Jun 2020 07:14:55 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;개발도중 노출되면 안되는것들이 종종있다.&lt;/p&gt;
&lt;p&gt;예를들어 API호출시 사용할때 필요한 키값이라던가&lt;br /&gt;
소셜로그인용 키값, 아이디, 비밀번호 라든지&lt;/p&gt;
&lt;p&gt;이게 코드에 그대로 포함되어도 될까? 라고 생각드는것들이다.&lt;/p&gt;
&lt;bl
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>개발도중 노출되면 안되는것들이 종종있다.</p><p>예를들어 API호출시 사용할때 필요한 키값이라던가<br />소셜로그인용 키값, 아이디, 비밀번호 라든지</p><p>이게 코드에 그대로 포함되어도 될까? 라고 생각드는것들이다.</p><blockquote><p>노출되어서 이득볼것이 없다.<br />긴가민가 하면 숨기자.</p></blockquote><p>이것들을 숨기고 관리하는 방법을 한번 포스팅 해보겠다.</p><h1 id="xcconfig"><a class="markdownIt-Anchor" href="#xcconfig"></a> xcconfig</h1><p>프로젝트에서 새로운 파일(cmd + n)을 만들기를 하고<br /><code>Configuration Settings File</code>을 찾아서 생성해준다.</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image1.png" class="" title="image1"><p>나는 <code>Config</code>라는 폴더 아래에 <code>Debug</code>, <code>Production</code> 두개를 만들었다.</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image2.png" class="" title="image2"><p>그다음 환경변수를 적어주자</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image3.png" class="" title="image3"><blockquote><p>변수이름은 서로 같아야 호출할때 편하다.</p></blockquote><p>이걸로 xcconfig세팅은 끝이다.</p><h1 id="config-할당하기"><a class="markdownIt-Anchor" href="#config-할당하기"></a> config 할당하기</h1><p>그다음 <code>project</code>의 <code>info</code>탭으로 이동하자.</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image4.png" class="" title="image4"><p>그럼 Configurations에 <code>Debug</code>와 <code>Release</code>가 기본적으로 존재한다.</p><blockquote><p>기본값인듯 하다.</p></blockquote><p>추가적으로 더 만들수도 있다. (밑에 +버튼)</p><p>여기서는 두개만 세팅을 해보겠다.</p><p>열어보면 타겟을 지정해줄 수 있는데<br />우리가 만든 xcconfig를 추적해 알아서 보여준다.</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image5.png" class="" title="image5"><p>환경에 맞게 추가해주면 되겠다.</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image6.png" class="" title="image6"><blockquote><p>Debug에 Debug<br />Release에 Production을 설정해주었다.</p></blockquote><p>이제 config할당도 끝났다.<br />하지만 아직 할것이 남았다.<br />할당한 변수를 사용하기 위해선 <code>info.plist</code>의 수정도 필요하다.</p><h1 id="infoplist"><a class="markdownIt-Anchor" href="#infoplist"></a> info.plist</h1><p><code>info.plist</code>에서 <code>information Property</code>를 추가하자</p><p>추가하는법은 왼쪽 변수중 아무거나 하나 붙잡고 +을 누르면 생기게 된다.</p><p>우리가 사용하게 될 키값이 될테니 <code>Key</code>값을 구분하기 좋게 지어주자.</p><p><code>Value</code>에는 <code>xcconfig</code>에서 지정했던 변수를 <code>$(변수명)</code>의 형태로 적어준다.</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image7.png" class="" title="image7"><blockquote><p>상단에 API_SECRET_KEY<br />APP_KEY 로 세팅해두었다.</p></blockquote><p>이제 세팅은 끝났다.<br />한번 사용해보도록 하자.</p><h1 id="사용"><a class="markdownIt-Anchor" href="#사용"></a> 사용</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Bundle</span>.main.infoDictionary[키값]</span><br></pre></td></tr></table></figure><p>이러한 형태로 <code>info.plist</code> 호출이 가능하다.</p><p>나는 Constants로 따로 모아두는 것을 좋아해서</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image8.png" class="" title="image8"><p>이런식으로 사용한다.</p><h1 id="환경-바꾸기"><a class="markdownIt-Anchor" href="#환경-바꾸기"></a> 환경 바꾸기</h1><p>우리는 최초 <code>Debug</code>와 <code>Release</code> 두개에 대해 환경변수를 구성해 주었다.</p><p>이제 그것들을 스위칭하는법을 알아보자</p><p>프로젝트 상단을 누르면 사진처럼 탭들이 나오는데</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image9.png" class="" title="image9"><p><code>Edit scheme</code>을 누르면<br />다음 사진처럼 나오게 되고</p><img src="/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/image10.png" class="" title="image10"><p>여기서 <code>Build Configuration</code>을 바꿔준 후 실행하면 우리가 지정했던 환경변수들을 바꿔가며 사용할 수 있다.</p><h1 id="gitignore"><a class="markdownIt-Anchor" href="#gitignore"></a> .gitignore</h1><p>환경변수를 분리했던 목적은 노출시키지 않기 위함 이었다.</p><p>하지만 이상태로 <code>add</code>, <code>commit</code>, <code>push</code>를 하게되면 <code>commit</code>에 포함되어버려서 그대로 노출된다.</p><p>이를 방지하기 위해 <code>.gitignore</code>를 수정해주자</p><blockquote><p>gitignore란 commit에 특정 규칙을 가진 <code>파일</code>, <code>폴더</code>를 제외시킬 수 있도록 해주는 규칙 모음이다.<br />.이 파일이름 가장앞에 붙으면 숨김파일</p></blockquote><p><code>.gitignore</code>에<br /><code>*.xcconfig</code> 규칙을 추가해주고<br /><code>.gitignore</code>만 <code>add</code>, <code>commit</code>을 진행해준다.</p><blockquote><p><code>gitignore</code>가 수정된 후 <code>commit</code>되어야 파일을 제외해준다.<br />수정만 했다고 바로 제외해주는게 아니다.</p></blockquote><p>그다음 <code>git status</code>를 입력하여 정상적으로 <code>xcconfig</code>가 빠졌는지 확인을 하면 끝</p><p>안빠졌다면 구글에 <code>gitignore 적용 안됨</code> 이런식으로 검색하면 나오니 한번 살펴보시길 바란다.</p><blockquote><p>해당내용도 언젠가 포스팅 해보겠다.</p></blockquote>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/06/iOS-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift-스킬트리</title>
      <link>http://hongdonghyun.github.io/2020/06/Swift-%EC%8A%A4%ED%82%AC%ED%8A%B8%EB%A6%AC/</link>
      <guid>http://hongdonghyun.github.io/2020/06/Swift-%EC%8A%A4%ED%82%AC%ED%8A%B8%EB%A6%AC/</guid>
      <pubDate>Wed, 03 Jun 2020 15:02:45 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/49993&quot; targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/49993" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> skill:String, <span class="number">_</span> skill_trees:[String])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> tree <span class="keyword">in</span> skill_trees &#123;</span><br><span class="line">        <span class="keyword">var</span> currentSkill = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> tree &#123;</span><br><span class="line">            <span class="keyword">if</span> skill.<span class="built_in">contains</span>(s) &#123;</span><br><span class="line">                currentSkill += s.description</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> skill.hasPrefix(currentSkill) &#123;</span><br><span class="line">            cnt += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p><code>skill_trees</code>안에 있는 스킬트리 목록을 순회하면서<br />다시 하나씩 순회하면서 들어있는 요소를 하나씩 순회하면서 문자를 탐색한다.</p><p>주어진 <code>skill</code>안에 포함되어있는지 탐색 후 있다면 다른변수에 저장을 해두고 없으면 넘어간다.</p><p>작은순회가 한번 끝나면 <code>skill</code>과 <code>hasPrefix</code>를 사용하여 포함되어있는지 확인 후 카운팅을 증가시키고 대순회가 끝나면 리턴하면 된다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/06/Swift-%EC%8A%A4%ED%82%AC%ED%8A%B8%EB%A6%AC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift-종이접기</title>
      <link>http://hongdonghyun.github.io/2020/06/Swift-%EC%A2%85%EC%9D%B4%EC%A0%91%EA%B8%B0/</link>
      <guid>http://hongdonghyun.github.io/2020/06/Swift-%EC%A2%85%EC%9D%B4%EC%A0%91%EA%B8%B0/</guid>
      <pubDate>Wed, 03 Jun 2020 14:07:38 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/62049&quot; targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/62049" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pattern</span><span class="params">(<span class="number">_</span> n: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> temp = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> n.reversed() &#123;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">"1"</span> &#123;</span><br><span class="line">            temp += <span class="string">"0"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            temp += <span class="string">"1"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n + <span class="string">"0"</span> + temp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> answer = <span class="string">"0"</span></span><br><span class="line">    <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">1</span>..&lt;n &#123;</span><br><span class="line">        answer = pattern(answer)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> answer.compactMap &#123; <span class="type">Int</span>($<span class="number">0</span>.description) &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>이게 레벨3이라는게 일단 안믿긴다.</p><blockquote><p>넘나어려웠다.</p></blockquote><p>문제에 패턴이 존재한다.<br />해당 패턴을 찾아내고 그걸 코드로 잘 풀어써야한다.</p><p>입출력 예제를 살펴보면<br />말로 설명할 수 없는 규칙성이 느껴진다.</p><ol><li>무조건 0으로 시작한다.</li><li>결과 값 중간은 무조건 0이다.</li><li>n은 n-1의 패턴을 가지고있다.</li></ol><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">1</span>  <span class="number">0</span> </span><br><span class="line">n=<span class="number">2</span>  <span class="number">001</span></span><br><span class="line">n=<span class="number">3</span>  <span class="number">001</span> <span class="number">0</span> <span class="number">011</span></span><br><span class="line">n=<span class="number">4</span>  <span class="number">001</span> <span class="number">0</span> <span class="number">011</span> <span class="number">0</span> <span class="number">001</span> <span class="number">1</span> <span class="number">011</span></span><br></pre></td></tr></table></figure><p>해당패턴을 유심히 살펴 보았더니 위의 3개의 규칙성을 찾아내었다.</p><p>하지만 3개의 규칙으로는 정답을 찾을수가없었다.<br />좀 더 살펴보면</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">1</span>  <span class="number">0</span>  <span class="number">1</span>자리</span><br><span class="line">n=<span class="number">2</span>  <span class="number">001</span> <span class="number">3</span>자리</span><br><span class="line">n=<span class="number">3</span>  <span class="number">001</span> <span class="number">0</span> <span class="number">011</span> <span class="number">7</span>자리</span><br><span class="line">n=<span class="number">4</span>  <span class="number">001</span> <span class="number">0</span> <span class="number">011</span> <span class="number">0</span> <span class="number">001</span> <span class="number">1</span> <span class="number">011</span> <span class="number">15</span>자리</span><br></pre></td></tr></table></figure><p>자릿수가 홀수였고 가운데가 무조건 0이라는것을 가지고 이리저리 조합해보았다.</p><p>말도안되지만 여기서 기적적으로 패턴을 찾았다.<br /><code>n=4</code>를 기준으로 살펴보면</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">              기준</span><br><span class="line">n=<span class="number">4</span>  <span class="number">001</span> <span class="number">0</span> <span class="number">011</span> <span class="number">0</span> <span class="number">001</span> <span class="number">1</span> <span class="number">011</span></span><br></pre></td></tr></table></figure><p>가운데 0을 기준으로<br />왼쪽과 오른쪽을 나누면</p><ul><li><code>001 0 011</code> 왼쪽</li><li><code>001 1 011</code> 오른쪽</li></ul><p>위와같은 패턴이고<br />왼쪽에 있는 패턴을 뒤집어보자(reverse)</p><ul><li><code>110 0 100</code> 왼쪽</li><li><code>001 1 011</code> 오른쪽</li></ul><p>혹시 보이는가?</p><p>왼쪽의 값을 뒤집고 반전시키면 오른쪽값이 된다<br />이제 저 4가지 규칙을 가지고 코드를 완성시키면 된다.</p><h1 id="code-2"><a class="markdownIt-Anchor" href="#code-2"></a> code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">pattern</span><span class="params">(<span class="number">_</span> n: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> temp = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> n.reversed() &#123;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">"1"</span> &#123;</span><br><span class="line">            temp += <span class="string">"0"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            temp += <span class="string">"1"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n + <span class="string">"0"</span> + temp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> answer = <span class="string">"0"</span></span><br><span class="line">    <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">1</span>..&lt;n &#123;</span><br><span class="line">        answer = pattern(answer)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> answer.compactMap &#123; <span class="type">Int</span>($<span class="number">0</span>.description) &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/06/Swift-%EC%A2%85%EC%9D%B4%EC%A0%91%EA%B8%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift-멀쩡한 사각형</title>
      <link>http://hongdonghyun.github.io/2020/06/Swift-%EB%A9%80%EC%A9%A1%ED%95%9C-%EC%82%AC%EA%B0%81%ED%98%95/</link>
      <guid>http://hongdonghyun.github.io/2020/06/Swift-%EB%A9%80%EC%A9%A1%ED%95%9C-%EC%82%AC%EA%B0%81%ED%98%95/</guid>
      <pubDate>Wed, 03 Jun 2020 10:30:22 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/62048&quot; targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/62048" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><p>처음</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GCD</span> <span class="params">(<span class="number">_</span> a:Int64, <span class="number">_</span> b: Int64)</span></span> -&gt; <span class="type">Int64</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> remain = a % b</span><br><span class="line">    <span class="keyword">if</span> remain == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">GCD</span>(b, remain)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> w:Int, <span class="number">_</span> h:Int)</span></span> -&gt; <span class="type">Int64</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> answer:<span class="type">Int64</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> gcd = <span class="type">GCD</span>(w, h)</span><br><span class="line">    <span class="keyword">let</span> maxQuad: <span class="type">Int64</span> = <span class="type">Int64</span>(w) * <span class="type">Int64</span>(h)</span><br><span class="line">    <span class="keyword">if</span> gcd == <span class="number">1</span> &#123;</span><br><span class="line">        answer = <span class="type">Int64</span>(maxQuad - <span class="type">Int64</span>(w + h - <span class="number">1</span>))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        answer = <span class="type">Int64</span>(maxQuad - <span class="type">Int64</span>(w + h - gcd))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>최적화</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GCD</span> <span class="params">(<span class="number">_</span> a:Int64, <span class="number">_</span> b: Int64)</span></span> -&gt; <span class="type">Int64</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> remain = a % b</span><br><span class="line">    <span class="keyword">if</span> remain == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">GCD</span>(b, remain)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> w:Int, <span class="number">_</span> h:Int)</span></span> -&gt; <span class="type">Int64</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> w64 = <span class="type">Int64</span>(w), h64 = <span class="type">Int64</span>(h)</span><br><span class="line">    <span class="keyword">return</span> (w64 * h64) - (w64 + h64 - <span class="type">GCD</span>(w64, h64))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">print</span>(solution(<span class="number">1000000000</span>, <span class="number">100000000</span>))</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>이문제를 처음봤을때 어떻게 풀어야할지 감을 전혀 잡지 못했다.</p><p>그래서 손으로 직접 그려서 규칙을 찾아보려고 했다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ㅂㅁㅁ w 3 ,h: 4</span><br><span class="line">ㅂㅂㅁ answer: 6</span><br><span class="line">ㅁㅂㅂ gcd: 1</span><br><span class="line">ㅁㅁㅂ</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ㅂㅁ w: 2, h: 3</span><br><span class="line">ㅂㅂ answer: 2</span><br><span class="line">ㅁㅂ gcd: 1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ㅂㅁ w: 2, h: 5</span><br><span class="line">ㅂㅁ answer: 2</span><br><span class="line">ㅂㅂ gcd: 1</span><br><span class="line">ㅁㅂ</span><br><span class="line">ㅁㅂ</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> ㅂㅂㅁㅁㅁ w: 5 h: 4</span><br><span class="line">ㅁㅂㅂㅁㅁ answer: 12</span><br><span class="line">ㅁㅁㅂㅂㅁ gcd: 1</span><br><span class="line">ㅁㅁㅁㅂㅂ</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ㅂㅁㅁ w: 3, h: 3</span><br><span class="line">ㅁㅂㅁ answer: 6</span><br><span class="line">ㅁㅁㅂ gcd: 3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> ㅂㅁㅁㅁ w: 4 h: 6 ㅁㅂㅁㅁ answer: 16 ㅁㅂㅂㅁ gcd: 2 ㅁㅁㅂㅁ ㅁㅁㅂㅂ ㅁㅁㅁㅂ</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ㅂㅁㅁㅁ w: 4, h: 4</span><br><span class="line">ㅁㅂㅁㅁ answer: 12</span><br><span class="line">ㅁㅁㅂㅁ gcd: 4</span><br><span class="line">ㅁㅁㅁㅂ</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ㅂㅁㅁㅁㅁㅁㅁㅁ w: 8 h: 8</span><br><span class="line">ㅁㅂㅁㅁㅁㅁㅁㅁ answer: 56</span><br><span class="line">ㅁㅁㅂㅁㅁㅁㅁㅁ gcd: 8</span><br><span class="line">ㅁㅁㅁㅂㅁㅁㅁㅁ</span><br><span class="line">ㅁㅁㅁㅁㅂㅁㅁㅁ</span><br><span class="line">ㅁㅁㅁㅁㅁㅂㅁㅁ</span><br><span class="line">ㅁㅁㅁㅁㅁㅁㅂㅁ</span><br><span class="line">ㅁㅁㅁㅁㅁㅁㅁㅂ</span><br></pre></td></tr></table></figure><blockquote><p>고민의 흔적</p></blockquote><p>표본을 충분히 그려놓고<br />숫자들을 이리저리 더하고 곱하고 지지고 볶고를 시작했다.</p><p>그러다보니 어느순간 규칙성이 보이기 시작했다.</p><p>직사각형의 형태일땐 정사각형때와는 다르게 선이 지저분하게 그려지고 있고</p><p>사각형을 잡아먹는 패턴이 있다는것이 보여졌다.</p><p>그러고나서 예제 입출력을 살펴보니 직사각형의 형태, 지저분한 선, 일정한 패턴이 보였고<br />패턴의 갯수를 세어보니 4개가 있었다.</p><p>다시 직사각형의 표본을 살펴보다가</p><p>감을 잃었다 ㅋㅋㅋㅋ</p><p>무언가 느껴지는데 알수가 없었다.</p><p>그렇게 한참을 들여다 보다<br />정사각형의 패턴을 봤을때 실마리를 찾았다.<br />정사각형의 패턴은 예쁘게 그려져있고 패턴의 수와 크기가 동일하다는걸 보았고<br />이리저리 굴려보다 저 패턴이 최대공약수와 동일하단걸 알았다.</p><p>이문제는 정말 운으로 맞춘것 같다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/06/Swift-%EB%A9%80%EC%A9%A1%ED%95%9C-%EC%82%AC%EA%B0%81%ED%98%95/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift-비밀지도</title>
      <link>http://hongdonghyun.github.io/2020/06/Swift-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84/</link>
      <guid>http://hongdonghyun.github.io/2020/06/Swift-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84/</guid>
      <pubDate>Mon, 01 Jun 2020 07:33:21 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/17681?langua
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/17681?language=swift" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><p>실패</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int, <span class="number">_</span> arr1:[Int], <span class="number">_</span> arr2:[Int])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">0</span>..&lt;n).<span class="built_in">map</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> binary = <span class="type">String</span>(arr1[$<span class="number">0</span>] | arr2[$<span class="number">0</span>], radix: <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">let</span> padded = (<span class="type">String</span>(repeating: <span class="string">"0"</span>, <span class="built_in">count</span>: n - binary.<span class="built_in">count</span>) + binary).replacingOccurrences(of: <span class="string">"1"</span>, with: <span class="string">"#"</span>).replacingOccurrences(of: <span class="string">"0"</span>, with: <span class="string">" "</span>)</span><br><span class="line">        <span class="keyword">return</span> padded</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>성공</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int, <span class="number">_</span> arr1:[Int], <span class="number">_</span> arr2:[Int])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> (<span class="number">0</span>..&lt;n).<span class="built_in">map</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> binary = <span class="type">String</span>(arr1[$<span class="number">0</span>] | arr2[$<span class="number">0</span>], radix: <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">let</span> padded = <span class="type">String</span>(repeating: <span class="string">"0"</span>, <span class="built_in">count</span>: n - binary.<span class="built_in">count</span>) + binary</span><br><span class="line">        <span class="keyword">return</span> padded.<span class="built_in">reduce</span>(<span class="string">""</span>) &#123; $<span class="number">0</span> + ($<span class="number">1</span> == <span class="string">"0"</span> ? <span class="string">" "</span> : <span class="string">"#"</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>바이너리 연산을 하는 문제다.</p><p>지문에<br /><code>전체 지도는 두 장의 지도를 겹쳐서 얻을 수 있다. 각각 지도 1과 지도 2라고 하자. 지도 1 또는 지도 2 중 어느 하나라도 벽인 부분은 전체 지도에서도 벽이다. 지도 1과 지도 2에서 모두 공백인 부분은 전체 지도에서도 공백이다.</code></p><p>라는 부분에서 OR연산을 떠올려보자</p><p>OR연산은 둘중에 하나라도 참이면 결과가 참이 되는 논리연산이다.</p><p>두장의 지도를 겹쳐야한다고 했으니 지도를 겹쳐서 벽인부분을 #으로 나타내고 아닌 부분을 공백으로 나타나게끔 하면 된다.</p><p>다만 주어지는 입력값이 정수형이기 때문에 이진화 시켜 주어야하는데<br /><code>String(1, radix: 2)</code> 이런형태로 사용하면 정수를 이진화 할 수 있다.</p><p>그리고 예제에서는 나타나지 않았지만 자릿수가 안맞는 경우가 있다.<br />그렇기 때문에 제일 왼쪽에 0을 집어넣어 모두가 동일한 자릿수를 나타내도록 만들어 주어야한다.</p><p><code>let padded = String(repeating: &quot;0&quot;, count: n - binary.count) + binary</code><br />이런식으로</p><p>프로그래머스에서 <code>replacingOccurrences</code>메서드가 호출이 되지않아 <code>reduce</code>로 바꾸어서 처리했더니 통과했다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/06/Swift-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift-크레인 인형뽑기 게임</title>
      <link>http://hongdonghyun.github.io/2020/06/Swift-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84/</link>
      <guid>http://hongdonghyun.github.io/2020/06/Swift-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84/</guid>
      <pubDate>Mon, 01 Jun 2020 07:29:20 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/64061&quot; targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/64061" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> board:[[Int]], <span class="number">_</span> moves:[Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> board = board</span><br><span class="line">    <span class="keyword">var</span> resultStack: [<span class="type">Int</span>] = []</span><br><span class="line">    <span class="keyword">var</span> result = <span class="number">0</span></span><br><span class="line">    moves.forEach &#123; move <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">let</span> correctedMoved = move - <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> cursor <span class="keyword">in</span> <span class="number">0</span>..&lt;board.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> doll = board[cursor][correctedMoved]</span><br><span class="line">            <span class="keyword">guard</span> doll != <span class="number">0</span> <span class="keyword">else</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">            board[cursor][correctedMoved] = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> resultStack.last == doll &#123;</span><br><span class="line">                resultStack.removeLast()</span><br><span class="line">                result += <span class="number">2</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; resultStack.append(doll) &#125;</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>스택을 활용하여 푸는 문제다.<br />현재 인형들의 위치정보가 2차원 배열에 담겨져 오고<br />뽑은 인형들을 스택에 담으면 된다.</p><p>스택에 담긴 인형들은 가장위의 인형과 마지막으로 뽑은 인형이 동일하다면 없어지고 카운트를 증가시켜서 몇개가 없어졌는지 출력하면 된다.<br /><code>push</code>와 <code>pop</code>을 적절히 사용하면 된다.<br />그리고 동일한 인형을 뽑았다면 카운트는 2씩 증가해야한다.</p><p>지문이 길어 겁이 나지만 실제로는 레벨1에 해당하는 쉬운편의 문제였다.</p><p>그리고 맨처음에 문제를 잘못 읽어 발생한 문제 였지만 주어진 배열값들을 무의식적으로</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">        <span class="number">1</span>         <span class="number">2</span>           <span class="number">3</span>           <span class="number">4</span>            <span class="number">5</span></span><br><span class="line">[[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>],[<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">1</span>],[<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>]]</span><br></pre></td></tr></table></figure><p>이런식으로 읽으면 문제를 풀 수 없다.</p><blockquote><p>예제는 풀리는게 함정</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>      </span><br><span class="line">[</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>],</span><br><span class="line">[<span class="number">3</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>이렇게 보아야 풀린다.<br />이걸 잘못봐서 한참 고생했다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/06/Swift-%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%9D%B8%ED%98%95%EB%BD%91%EA%B8%B0-%EA%B2%8C%EC%9E%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift-주식가격</title>
      <link>http://hongdonghyun.github.io/2020/05/Swift-%EC%A3%BC%EC%8B%9D%EA%B0%80%EA%B2%A9/</link>
      <guid>http://hongdonghyun.github.io/2020/05/Swift-%EC%A3%BC%EC%8B%9D%EA%B0%80%EA%B2%A9/</guid>
      <pubDate>Wed, 27 May 2020 07:24:16 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42584&quot; targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/42584" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><h2 id="swift"><a class="markdownIt-Anchor" href="#swift"></a> Swift</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(prices: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">let</span> priceLength = prices.<span class="built_in">count</span></span><br><span class="line">    <span class="keyword">var</span> answer = [<span class="type">Int</span>](repeating: <span class="number">0</span>, <span class="built_in">count</span>: priceLength)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;priceLength &#123;</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">1</span>+i..&lt;priceLength &#123;</span><br><span class="line">            answer[i] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> prices[i] &gt; prices[j] &#123;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(prices: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">let</span> priceLength = prices.<span class="built_in">count</span></span><br><span class="line">    <span class="keyword">var</span> answer = [<span class="type">Int</span>](repeating: <span class="number">0</span>, <span class="built_in">count</span>: priceLength)</span><br><span class="line">    <span class="keyword">var</span> stack = [<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>..&lt;priceLength &#123;</span><br><span class="line">        <span class="keyword">if</span> prices[i] &lt; prices[stack.last!] &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> stack.reversed() &#123;</span><br><span class="line">                <span class="keyword">if</span> prices[i] &lt; prices[j] &#123;</span><br><span class="line">                    answer[j] = i - j</span><br><span class="line">                    stack.remove(at: j)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        stack.append(i)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;stack.<span class="built_in">count</span> - <span class="number">1</span> &#123;</span><br><span class="line">        answer[stack[i]] = priceLength - stack[i] - <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(prices)</span>:</span></span><br><span class="line">    price_length = len(prices)</span><br><span class="line">    answer = [<span class="number">0</span>] * price_length</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(price_length):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i + <span class="number">1</span>, price_length):</span><br><span class="line">            answer[i] += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> prices[i] &gt; prices[j]:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line"></span><br><span class="line">solution([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Stack</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span><span class="params">(prices)</span>:</span></span><br><span class="line">    price_length = len(prices)</span><br><span class="line">    answer = [<span class="number">0</span>] * price_length</span><br><span class="line">    stack = [<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, price_length):</span><br><span class="line">        <span class="keyword">if</span> prices[i] &lt; prices[stack[<span class="number">-1</span>]]:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> stack[::<span class="number">-1</span>]:</span><br><span class="line">                <span class="keyword">if</span> prices[i] &lt; prices[j]:</span><br><span class="line">                    answer[j] = i - j</span><br><span class="line">                    stack.remove(j)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        stack.append(i)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(stack) - <span class="number">1</span>):</span><br><span class="line">        answer[stack[i]] = len(prices) - stack[i] - <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line"></span><br><span class="line">print(solution([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>]))</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>프로그래머스 스택/큐에 있는 문제였다.</p><p>문제의 원래 의도는 스택을 사용하여 푸는듯 하다.</p><p>스택으로 푸는건 실패했지만 다른사람이 푼 코드를 가져와서 살펴보았다.<br />주어지는 값이 커질수록 스택으로 푸는게 훨씬 유리하다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/05/Swift-%EC%A3%BC%EC%8B%9D%EA%B0%80%EA%B2%A9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift-미로탐색</title>
      <link>http://hongdonghyun.github.io/2020/05/Swift-%EB%AF%B8%EB%A1%9C%ED%83%90%EC%83%89/</link>
      <guid>http://hongdonghyun.github.io/2020/05/Swift-%EB%AF%B8%EB%A1%9C%ED%83%90%EC%83%89/</guid>
      <pubDate>Sun, 24 May 2020 13:22:15 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2178&quot; target=&quot;_blank&quot; rel=&quot;noop
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://www.acmicpc.net/problem/2178" target="_blank" rel="noopener">백준 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> x: Int, <span class="number">_</span> y: Int, <span class="number">_</span> mage: [String])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="comment">// Int타입의 2차원배열 생성</span></span><br><span class="line">    <span class="keyword">let</span> mage = mage.<span class="built_in">map</span> &#123; $<span class="number">0</span>.compactMap &#123; <span class="type">Int</span>(<span class="type">String</span>($<span class="number">0</span>)) &#125; &#125;</span><br><span class="line">    <span class="comment">// 방문체크를 위한 2차원 배열</span></span><br><span class="line">    <span class="keyword">var</span> visit = [[<span class="type">Int</span>]](repeating: [<span class="type">Int</span>](repeating: <span class="number">0</span>, <span class="built_in">count</span>: y), <span class="built_in">count</span>: x)</span><br><span class="line">    <span class="comment">// 상,하,좌,우</span></span><br><span class="line">    <span class="keyword">let</span> dx = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>], dy = [<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// BFS</span></span><br><span class="line">    <span class="comment">// 위치정보를 담을 변수</span></span><br><span class="line">    <span class="keyword">var</span> queue: [(row: <span class="type">Int</span>, col: <span class="type">Int</span>)] = [(<span class="number">0</span>, <span class="number">0</span>)]</span><br><span class="line">    <span class="comment">// 시작점</span></span><br><span class="line">    visit[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> !queue.isEmpty &#123;</span><br><span class="line">        <span class="comment">// 방문</span></span><br><span class="line">        <span class="keyword">let</span> <span class="type">CURRENT</span> = queue.removeFirst()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"현재 위치:"</span>, <span class="type">CURRENT</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"현재 걸음 수:"</span>, visit[<span class="type">CURRENT</span>.row][<span class="type">CURRENT</span>.col])</span><br><span class="line">        <span class="comment">// 탈출조건: 현재위치가 x-1, y-1이라면 더이상 움직일 필요가 없다.</span></span><br><span class="line">        <span class="keyword">if</span> <span class="type">CURRENT</span>.row == x-<span class="number">1</span> &amp;&amp; <span class="type">CURRENT</span>.col == y-<span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> visit[<span class="type">CURRENT</span>.row][<span class="type">CURRENT</span>.col]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">4</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> <span class="type">NEXT</span>: (row: <span class="type">Int</span>, col: <span class="type">Int</span>) = (<span class="type">CURRENT</span>.row + dx[i], <span class="type">CURRENT</span>.col + dy[i])</span><br><span class="line">            <span class="keyword">if</span> <span class="type">NEXT</span>.row &gt;= <span class="number">0</span> &amp;&amp; <span class="type">NEXT</span>.row &lt; x &amp;&amp; <span class="type">NEXT</span>.col &gt;= <span class="number">0</span> &amp;&amp; <span class="type">NEXT</span>.col &lt; y &#123;</span><br><span class="line">                <span class="keyword">if</span> visit[<span class="type">NEXT</span>.row][<span class="type">NEXT</span>.col] == <span class="number">0</span> &amp;&amp; mage[<span class="type">NEXT</span>.row][<span class="type">NEXT</span>.col] == <span class="number">1</span> &#123;</span><br><span class="line">                    visit[<span class="type">NEXT</span>.row][<span class="type">NEXT</span>.col] = visit[<span class="type">CURRENT</span>.row][<span class="type">CURRENT</span>.col] + <span class="number">1</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"다음 위치:"</span>, <span class="type">NEXT</span>)</span><br><span class="line">                    queue.append(<span class="type">NEXT</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"----------------------------------------------"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> input = [</span><br><span class="line">    <span class="string">"101111"</span>,</span><br><span class="line">    <span class="string">"101010"</span>,</span><br><span class="line">    <span class="string">"101011"</span>,</span><br><span class="line">    <span class="string">"111011"</span></span><br><span class="line">]</span><br><span class="line"><span class="built_in">print</span>(solution(<span class="number">4</span>, <span class="number">6</span>, input)) <span class="comment">// 15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> input2 = [</span><br><span class="line">    <span class="string">"110110"</span>,</span><br><span class="line">    <span class="string">"110110"</span>,</span><br><span class="line">    <span class="string">"111111"</span>,</span><br><span class="line">    <span class="string">"111101"</span></span><br><span class="line">]</span><br><span class="line"><span class="built_in">print</span>(solution(<span class="number">4</span>, <span class="number">6</span>, input2)) <span class="comment">// 9</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> input3 = [</span><br><span class="line">    <span class="string">"1011101110111011101110111"</span>,</span><br><span class="line">    <span class="string">"1110111011101110111011101"</span></span><br><span class="line">]</span><br><span class="line"><span class="built_in">print</span>(solution(<span class="number">2</span>, <span class="number">25</span>, input3)) <span class="comment">// 38</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> input4 = [</span><br><span class="line">    <span class="string">"1011111"</span>,</span><br><span class="line">    <span class="string">"1110001"</span>,</span><br><span class="line">    <span class="string">"1000001"</span>,</span><br><span class="line">    <span class="string">"1000001"</span>,</span><br><span class="line">    <span class="string">"1000001"</span>,</span><br><span class="line">    <span class="string">"1000001"</span>,</span><br><span class="line">    <span class="string">"1111111"</span></span><br><span class="line">]</span><br><span class="line"><span class="built_in">print</span>(solution(<span class="number">7</span>, <span class="number">7</span>, input4)) <span class="comment">// 13</span></span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>미로를 가장 빨리 탈출할 수 있는 길을 찾는 문제였다.</p><p>BFS를 사용하여 풀어보았다.</p><p>미로의 방문여부를 체크하는 2차원 배열을 만든 후,<br />길을 지날때 마다 해당배열의 값을 움직인 거리수로 바꾸어 주고<br />주어지는 입력과 현재위치가 동일할때 현재위치에 찍힌 거리수를 출력한다.</p><p>현재위치에서 상, 하, 좌, 우를 탐색할 수 있도록<br /><code>let dx = [0, 0, 1, -1], dy = [1, -1, 0, 0]</code><br />변수를 만들고</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">4</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> <span class="type">NEXT</span>: (row: <span class="type">Int</span>, col: <span class="type">Int</span>) = (<span class="type">CURRENT</span>.row + dx[i], <span class="type">CURRENT</span>.col + dy[i])</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>반복문을 통해 인접한 위치를 탐색해준다.</p><p>그 후 모든 조건을 통과한 경우 queue에 집어넣어주게 되고,</p><p>입력된 위치까지 반복하게 된다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/05/Swift-%EB%AF%B8%EB%A1%9C%ED%83%90%EC%83%89/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Swift-기지국 설치</title>
      <link>http://hongdonghyun.github.io/2020/05/Swift-%EA%B8%B0%EC%A7%80%EA%B5%AD-%EC%84%A4%EC%B9%98/</link>
      <guid>http://hongdonghyun.github.io/2020/05/Swift-%EA%B8%B0%EC%A7%80%EA%B5%AD-%EC%84%A4%EC%B9%98/</guid>
      <pubDate>Wed, 06 May 2020 06:22:20 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;문제&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#문제&quot;&gt;&lt;/a&gt; 문제&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12979&quot; targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a class="markdownIt-Anchor" href="#문제"></a> 문제</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/12979" target="_blank" rel="noopener">프로그래머스 링크</a></p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">solution</span><span class="params">(<span class="number">_</span> n:Int, <span class="number">_</span> stations:[Int], <span class="number">_</span> w:Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="comment">// 최대범위는 2*w+1</span></span><br><span class="line">    <span class="comment">// 왼쪽 station - w</span></span><br><span class="line">    <span class="comment">// 오른쪽 station + w</span></span><br><span class="line">    <span class="keyword">var</span> answer: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> stationIdx: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> location: <span class="type">Int</span> = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> (location &lt;= n) &#123;</span><br><span class="line">        <span class="comment">// 기지국 범위안에 있다!</span></span><br><span class="line">        <span class="keyword">if</span> (stationIdx &lt; stations.<span class="built_in">count</span>) &amp;&amp; (location &gt;= stations[stationIdx] - w) &#123;</span><br><span class="line">            <span class="comment">// 기지국 오른쪽 범위의 다음 한칸으로!</span></span><br><span class="line">            location = stations[stationIdx] + w + <span class="number">1</span></span><br><span class="line">            <span class="comment">// 기지국 배열의 다음거로</span></span><br><span class="line">            stationIdx += <span class="number">1</span></span><br><span class="line">        <span class="comment">// 범위에 없다!</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 설치하고 최대 범위 다음 한칸으로 이동</span></span><br><span class="line">            location += <span class="number">2</span>*w+<span class="number">1</span></span><br><span class="line">            answer += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> answer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="풀이"><a class="markdownIt-Anchor" href="#풀이"></a> 풀이</h1><p>주어지는 파라미터들이 정렬된 상태로 주어지기 때문에</p><p>왼쪽에서부터 탐색을 하는 방식으로 진행했다.<br />왼쪽부터 탐색을 시작하고 전파의 최대범위는 1±w 가 아닌<br />2*w+1 이라고 생각해보자.</p><blockquote><p>w가 2라고 했을때</p></blockquote><blockquote><p>1에 설치해서 2*w+1 (5칸)</p></blockquote><blockquote><p>3에 설치해서  3±w (1~5)나 범위는 똑같지 않은가?</p></blockquote><blockquote><p>우리는 기지국이 설치된 위치를 구하는것이 아닌 갯수를 구한다는것에 중점을 두어야한다.</p></blockquote><p>기지국의 전파 최대 범위는 2*w+1 이라는걸 구한 후</p><blockquote><p>기지국 양쪽으로 전파가 닿으니 2*w이고 1은 기지국이 설치된 아파트이다.</p></blockquote><p>왼쪽의 최대 범위와 오른쪽 최대 범위를 이용해서</p><blockquote><p>station ± w</p></blockquote><p>현재 위치의 아파트에 기지국 전파가 닿는지 판단 후</p><p>닿는다면 오른쪽의 최대범위 + 1 만큼 이동하여<br />다시 탐색을 진행한다.</p><p>만약 범위가 닿지 않는다면 기지국을 설치해야하는 곳이고</p><p>설치 후 기지국의 최대범위 만큼 이동하여 다시 탐색을 하는 방식이다.</p><p>풀때는 몰랐는데 해당방식처럼 현재의 상태에서 최선의 방법을 선택하는것을 탐욕(Greedy)알고리즘 이라고 부르더라</p><p>어떠한 알고리즘을 선택하여 풀어야할지 공부를 좀 해야할것 같다.</p><p>입출력 예제 2번</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">L                S</span><br><span class="line">1 2 3 4 5 6 &#123;7 8 9 10 11&#125; 12 13 14 15 16</span><br><span class="line"></span><br><span class="line">1번은 현재 전파가 닿지 않는곳</span><br><span class="line">여기서 바로 설치를 하고 최대범위인 2*w+1 만큼 이동한다.</span><br><span class="line"></span><br><span class="line">            L      S</span><br><span class="line">[1 2 3 4 5] 6 &#123;7 8 9 10 11&#125; 12 13 14 15 16</span><br><span class="line"></span><br><span class="line">1에서 2*w+1 만큼 이동했으니 현재 6에 도착한 상태</span><br><span class="line">다시 범위를 탐색하고 6은 전파범위안에 들어와있지 않으니 다시 기지국을 설치한다.</span><br><span class="line"></span><br><span class="line">                    S      L</span><br><span class="line">[1 2 3 4 5] [6 &#123;7 8 9 10] 11&#125; 12 13 14 15 16</span><br><span class="line"></span><br><span class="line">설치 후 2*w+1 만큼 이동했으니 11에 도착했다.</span><br><span class="line">11은 기지국 범위에 닿아있으니 닿지않는 곳을 탐색해야한다.</span><br><span class="line"></span><br><span class="line">우리는 왼쪽에서부터 출발을 했다. 왼쪽은 이미 설치가 다 되어있는곳이니 탐색할 필요가 없다.</span><br><span class="line">그러니 오른쪽 방향만 탐색을 하면 된다.</span><br><span class="line"></span><br><span class="line">오른쪽 최대 범위는 station의 위치(9) + w(2)이고</span><br><span class="line">여기는 범위안이니 그 &quot;다음 한칸까지&quot; 이동해야한다. +1을 해준다.</span><br><span class="line">            </span><br><span class="line">                    S          L</span><br><span class="line">[1 2 3 4 5] [6 &#123;7 8 9 10] 11&#125; 12 13 14 15 16</span><br><span class="line"></span><br><span class="line">이제 12에 도착했고 기지국 전파 범위안에 없다는걸 확인했으니 다시 기지국을 설치해야 하는곳이다.</span><br><span class="line">                    S                          L</span><br><span class="line">[1 2 3 4 5] [6 &#123;7 8 9 10] 11&#125; [12 13 14 15 16]</span><br><span class="line"></span><br><span class="line">현재 위치가 범위를 벗어났으니 탐색을 종료한다.</span><br></pre></td></tr></table></figure><p>해당 문제는 기지국의 설치갯수이지 설치된 위치를 구하는것이 아니다.</p><p>그렇기 때문에 기지국의 전파범위를 1±w로 생각하는것이 아니라</p><p>왼쪽에서 출발하고 2*w+1로 생각하면 결국엔 똑같다.</p><blockquote><p>말이야 쉽지 정작 내가 이걸 어떻게 풀어냈는지 이해가 아직도 안된다.</p></blockquote>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/05/Swift-%EA%B8%B0%EC%A7%80%EA%B5%AD-%EC%84%A4%EC%B9%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>iOS 상단 Toast</title>
      <link>http://hongdonghyun.github.io/2020/05/Swift-%EC%83%81%EB%8B%A8-Toast/</link>
      <guid>http://hongdonghyun.github.io/2020/05/Swift-%EC%83%81%EB%8B%A8-Toast/</guid>
      <pubDate>Tue, 05 May 2020 06:28:10 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;상단-토스트-메시지&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#상단-토스트-메시지&quot;&gt;&lt;/a&gt; 상단 토스트 메시지&lt;/h1&gt;
&lt;img src=&quot;/2020/05/Swift-%EC%83%81%EB%8B%A8-Toast/t
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="상단-토스트-메시지"><a class="markdownIt-Anchor" href="#상단-토스트-메시지"></a> 상단 토스트 메시지</h1><img src="/2020/05/Swift-%EC%83%81%EB%8B%A8-Toast/toast_img.jpeg" class="" title="noti_image"><p><a href="https://github.com/iOS-WPS-Team3/iOS-team3/tree/develop" target="_blank" rel="noopener">팀프로젝트</a> 진행중 이미지 처럼 앱 어디서든지 상단 알림창이 뜨게 만들어야 하는게 있었다.</p><p><code>ViewController</code>를 <code>extension</code>하여 코드를 추가하려고 했으나<br /><code>window</code>에도 오토레이아웃이 잡힌다고 해서 한번 시도해 보았다.</p><h1 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h1><p>해당 코드는 <a href="https://github.com/devxoul/Then" target="_blank" rel="noopener">Then</a>, <a href="https://github.com/SnapKit/SnapKit" target="_blank" rel="noopener">SnapKit</a> 을 사용한 코드입니다.</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KurlyNotification</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">let</span> shared = <span class="type">KurlyNotification</span>()</span><br><span class="line">  </span><br><span class="line">  <span class="class"><span class="keyword">enum</span> <span class="title">NotiType</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> warning</span><br><span class="line">    <span class="keyword">case</span> notice</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">let</span> warningLabel = <span class="type">UILabel</span>().then &#123;</span><br><span class="line">    $<span class="number">0</span>.backgroundColor = .systemPink</span><br><span class="line">    $<span class="number">0</span>.textColor = .white</span><br><span class="line">    $<span class="number">0</span>.layer.cornerRadius = <span class="number">5</span></span><br><span class="line">    $<span class="number">0</span>.layer.masksToBounds = <span class="literal">true</span></span><br><span class="line">    $<span class="number">0</span>.textAlignment = .center</span><br><span class="line">    $<span class="number">0</span>.font = .systemFont(ofSize: <span class="number">20</span>, weight: .bold)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">let</span> notificationLabel = <span class="type">UILabel</span>().then &#123;</span><br><span class="line">    $<span class="number">0</span>.backgroundColor = .white</span><br><span class="line">    $<span class="number">0</span>.textColor = .kurlyPurple1</span><br><span class="line">    $<span class="number">0</span>.layer.cornerRadius = <span class="number">5</span></span><br><span class="line">    $<span class="number">0</span>.layer.masksToBounds = <span class="literal">true</span></span><br><span class="line">    $<span class="number">0</span>.textAlignment = .center</span><br><span class="line">    $<span class="number">0</span>.font = .systemFont(ofSize: <span class="number">20</span>, weight: .bold)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">let</span> shadowView = <span class="type">UIView</span>().then &#123;</span><br><span class="line">    $<span class="number">0</span>.layer.shadowColor = <span class="type">UIColor</span>.black.cgColor</span><br><span class="line">    $<span class="number">0</span>.layer.shadowOpacity = <span class="number">0.6</span></span><br><span class="line">    $<span class="number">0</span>.layer.shadowOffset = .zero</span><br><span class="line">    $<span class="number">0</span>.layer.shadowRadius = <span class="number">5</span></span><br><span class="line">    $<span class="number">0</span>.layer.shadowOffset = <span class="type">CGSize</span>(width: <span class="number">0</span>, height: <span class="number">4</span>)</span><br><span class="line">    $<span class="number">0</span>.layer.masksToBounds = <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> activityIndicatorView = <span class="type">UIActivityIndicatorView</span>()</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">show</span><span class="params">(text: String, type: NotiType)</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> beforeShowLabel: <span class="type">UILabel?</span></span><br><span class="line">    <span class="keyword">switch</span> type &#123;</span><br><span class="line">    <span class="keyword">case</span> .notice:</span><br><span class="line">      beforeShowLabel = notificationLabel</span><br><span class="line">    <span class="keyword">case</span> .warning:</span><br><span class="line">      beforeShowLabel = warningLabel</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> appDelegate = <span class="type">UIApplication</span>.shared.delegate <span class="keyword">as</span>? <span class="type">AppDelegate</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> window = appDelegate.window,</span><br><span class="line">    <span class="keyword">let</span> showLabel = beforeShowLabel</span><br><span class="line">    <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    </span><br><span class="line">    showLabel.text = text</span><br><span class="line">    window.addSubview(showLabel)</span><br><span class="line">    </span><br><span class="line">    showLabel.snp.makeConstraints &#123;</span><br><span class="line">      $<span class="number">0</span>.bottom.equalTo(window.snp.top)</span><br><span class="line">      $<span class="number">0</span>.centerX.equalToSuperview()</span><br><span class="line">      $<span class="number">0</span>.width.equalToSuperview().multipliedBy(<span class="number">0.88</span>)</span><br><span class="line">      $<span class="number">0</span>.height.equalTo(<span class="number">54</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    activityIndicatorView.isHidden = <span class="literal">false</span></span><br><span class="line">    activityIndicatorView.startAnimating()</span><br><span class="line"></span><br><span class="line">    <span class="type">UIView</span>.animate(withDuration: <span class="number">0.4</span>) &#123;</span><br><span class="line">      showLabel.transform = .<span class="keyword">init</span>(translationX: <span class="number">0</span>, y: <span class="number">100</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">DispatchQueue</span>.main.asyncAfter(deadline: .now() + <span class="number">0.8</span>) &#123;</span><br><span class="line">      <span class="type">UIView</span>.animateKeyframes(withDuration: <span class="number">0.4</span>, delay: <span class="number">0</span>, animations: &#123;</span><br><span class="line">        showLabel.transform = .identity</span><br><span class="line">      &#125;, completion: &#123; <span class="number">_</span> <span class="keyword">in</span></span><br><span class="line">        showLabel.removeFromSuperview()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">init</span>() &#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">KurlyNotification</span>.shared.show(text: <span class="string">"장바구니에 상품이 담겼습니다."</span>, type: .notice)</span><br></pre></td></tr></table></figure><h1 id="설명"><a class="markdownIt-Anchor" href="#설명"></a> 설명</h1><p>기존 코드는 타입별로 메서드가 달랐으나 다시보니 비슷한 형태의 코드가 중복으로 발생하고 있어 <code>enum</code>으로 타입을 구분하여 사용하도록 변경했다.</p><p>싱글톤을 사용하여 만들었고 이렇게 만들고 보니 <code>ViewController</code>에 제약을 받지 않아 어디서든지 <code>Toast</code>를 띄울 수 있었다.</p><p><code>window</code>에 오토레이아웃을 잡아서 사용할 수 있을거라곤 생각도 못했고 시도도 하지 못했는데<br />이번기회에 좋은공부가 된것 같다.</p>]]></content:encoded>
      
      <comments>http://hongdonghyun.github.io/2020/05/Swift-%EC%83%81%EB%8B%A8-Toast/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
